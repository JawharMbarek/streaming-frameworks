From: "Mit Windows Internet Explorer 10 gespeichert"
Subject: Apache Mahout: Scalable machine learning and data mining
Date: Mon, 1 Jul 2013 00:58:58 +0200
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CE75F6.2B00A430"
X-MimeOLE: Produced By Microsoft MimeOLE V6.2.9200.16384

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://mahout.apache.org/

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!DOCTYPE html PUBLIC "" ""><HTML lang=3D"en" lang=3D"en" =
xml:lang=3D"en" xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><META=20
content=3D"IE=3D10.000" http-equiv=3D"X-UA-Compatible">
   <TITLE>Apache Mahout: Scalable machine learning and data =
mining</TITLE>  =20
<META http-equiv=3D"Content-Type" content=3D"text/html;charset=3DUTF-8"> =
 =20
<META name=3D"Distribution" content=3D"Global">  =20
<META name=3D"Robots" content=3D"index,follow">  =20
<META name=3D"keywords" content=3D"apache, apache hadoop, apache =
lucene,&#10;        business data mining, cluster analysis,&#10;        =
collaborative filtering, data extraction, data filtering, data =
framework, data integration,&#10;        data matching, data mining, =
data mining algorithms, data mining analysis, data mining data,&#10;     =
   data mining introduction, data mining software,&#10;        data =
mining techniques, data representation, data set, datamining,&#10;       =
 feature extraction, fuzzy k means, genetic algorithm, hadoop,&#10;      =
  hierarchical clustering, high dimensional, introduction to data =
mining, kmeans,&#10;        knowledge discovery, learning approach, =
learning approaches, learning methods,&#10;        learning techniques, =
lucene, machine learning, machine translation, mahout apache,&#10;       =
 mahout taste, map reduce hadoop, mining data, mining methods, naive =
bayes,&#10;        natural language processing,&#10;        supervised, =
text mining, time series data, unsupervised, web data mining">   <LINK =
href=3D"images/favicon.ico" rel=3D"shortcut icon" type=3D"image/x-icon"> =

  <LINK href=3D"http://mahout.apache.org/images/global.css" =
rel=3D"stylesheet" type=3D"text/css">=20
 =20
<SCRIPT src=3D"http://mahout.apache.org/images/prototype.js" =
type=3D"text/javascript"></SCRIPT>
  =20
<SCRIPT src=3D"http://mahout.apache.org/images/effects.js" =
type=3D"text/javascript"></SCRIPT>
  =20
<SCRIPT src=3D"http://mahout.apache.org/images/search.js" =
type=3D"text/javascript"></SCRIPT>
  =20
<SCRIPT src=3D"http://mahout.apache.org/images/slides.js" =
type=3D"text/javascript"></SCRIPT>
=20
<META name=3D"GENERATOR" content=3D"MSHTML 10.00.9200.16612"></HEAD>=20
<BODY id=3D"home">
<DIV id=3D"wrap">
<DIV id=3D"header">
<DIV id=3D"logo"><A href=3D"http://mahout.apache.org/"></A></DIV>
<DIV id=3D"nav">
<UL>
  <LI><A=20
  =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Downloads">Down=
load</A></LI>=20
       =20
  <LI><A=20
  =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT">Documentation<=
/A></LI>=20
       =20
  <LI><A=20
  =
href=3D"https://cwiki.apache.org/confluence/display/MAHOUT/Quickstart">Tu=
torials</A></LI>=20
       =20
  <LI><A href=3D"https://issues.apache.org/jira/browse/MAHOUT">Bug=20
  Tracker</A></LI>      =20
  <LI><A class=3D"last" =
href=3D"https://cwiki.apache.org/confluence/display/MAHOUT/Mailing+Lists%=
2C+IRC+and+Archives">Discussion</A></LI>=20
      </UL>   </DIV>
<DIV id=3D"search">
<SCRIPT type=3D"text/javascript">=0A=
      function getBlank(input, stdValue) {=0A=
      if (input.value =3D=3D stdValue) {=0A=
      input.value =3D '';=0A=
      }=0A=
      return true;=0A=
      }=0A=
=0A=
      function selectProvider(form) {=0A=
      provider =3D form.elements['searchProvider'].value;=0A=
      if (provider =3D=3D "any") {=0A=
      if (Math.random() > 0.5) {=0A=
      provider =3D "lucid";=0A=
      } else {=0A=
      provider =3D "sl";=0A=
      }=0A=
      }=0A=
=0A=
      if (provider =3D=3D "lucid") {=0A=
      form.action =3D "http://search.lucidimagination.com/p:mahout";=0A=
      } else if (provider =3D=3D "sl") {=0A=
      form.action =3D "http://search-lucene.com/mahout";=0A=
      }=0A=
=0A=
      days =3D 90; // cookie will be valid for 90 days=0A=
      date =3D new Date();=0A=
      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));=0A=
      expires =3D "; expires=3D" + date.toGMTString();=0A=
      document.cookie =3D "searchProvider=3D" + provider + expires + "; =
path=3D/";=0A=
      return true;=0A=
      }=0A=
    </SCRIPT>
    =20
<FORM name=3D"searchform" id=3D"quick-search" onsubmit=3D"return =
selectProvider(this)"=20
action=3D"http://search-lucene.com/mahout" method=3D"GET">
<FIELDSET><INPUT name=3D"q" class=3D"class1 class2 hint" accesskey=3D"q" =
onfocus=3D"getBlank(this, 'Search with Apache Solr...')"=20
type=3D"search" value=3D"Search with Apache Solr...">         <SPAN =
style=3D"color: white;">@</SPAN>=20
        <SELECT name=3D"searchProvider" id=3D"searchProvider"><OPTION=20
  value=3D"any">select provider</OPTION>           <OPTION =
value=3D"lucid">Lucid=20
  Find</OPTION>           <OPTION value=3D"sl">Search-Lucene</OPTION>    =
    =20
</SELECT>       </FIELDSET>
<SCRIPT type=3D"text/javascript">=0A=
        if (document.cookie.length>0) {=0A=
        cStart=3Ddocument.cookie.indexOf("searchProvider=3D");=0A=
        if (cStart!=3D-1) {=0A=
        cStart=3DcStart + "searchProvider=3D".length;=0A=
        cEnd=3Ddocument.cookie.indexOf(";", cStart);=0A=
        if (cEnd=3D=3D-1) {=0A=
        cEnd=3Ddocument.cookie.length;=0A=
        }=0A=
        provider =3D unescape(document.cookie.substring(cStart,cEnd));=0A=
        document.forms['searchform'].elements['searchProvider'].value =
=3D provider;=0A=
        }=0A=
        }=0A=
      </SCRIPT>
     </FORM></DIV>
<DIV id=3D"slides">
<DIV class=3D"slideshow" id=3D"mantleSlides">
<DIV id=3D"slide1" style=3D"display: none;">
<DIV class=3D"callout">          Scalable machine learning<BR>          =
and data=20
mining         </DIV>
<DIV class=3D"description">          Apache Mahout has implementations =
of a wide=20
range of machine learning and data mining algorithms: clustering,        =
 =20
classification, collaborative filtering and frequent pattern mining      =
  =20
</DIV>
<DIV class=3D"mantle"><IMG alt=3D"Apache Mahout" =
src=3D"http://mahout.apache.org/images/mantle-mahout.png">=20
        </DIV></DIV>
<DIV id=3D"slide2" style=3D"display: none;">
<DIV class=3D"callout">          Leveraging the power of Map/Reduce<BR>  =
       =20
with Apache Hadoop         </DIV>
<DIV class=3D"description">          Our core algorithms for clustering, =

classification and batch based collaborative filtering are implemented =
on       =20
  top of Apache Hadoop using the map/reduce paradigm         </DIV>
<DIV class=3D"mantle"><IMG alt=3D"Hadoop" =
src=3D"http://mahout.apache.org/images/mantle-hadoop.png">=20
        </DIV></DIV>
<DIV id=3D"slide3" style=3D"display: none;">
<DIV class=3D"callout">          Scalable and vibrant community         =
</DIV>
<DIV class=3D"description">          The goal of Apache Mahout is to =
build a=20
vibrant, responsive, diverse community to facilitate discussions not =
only on    =20
     the project itself but also on potential use cases         </DIV>
<DIV class=3D"mantle"><IMG alt=3D"Apache Mahout community" =
src=3D"http://mahout.apache.org/images/mantle-community.png">=20
        </DIV></DIV>
<DIV id=3D"slide4" style=3D"opacity: 0.5;">
<DIV class=3D"callout">          Apache 2.0 licensed         </DIV>
<DIV class=3D"description">          Apache Mahout is distributed under =
a=20
commercially friendly Apache Software license         </DIV>
<DIV class=3D"mantle"><IMG alt=3D"Apache Software Foundation" =
src=3D"http://mahout.apache.org/images/mantle-asf.png">=20
        </DIV></DIV></DIV>
<DIV class=3D"controls"><A title=3D"Next" class=3D"next" id=3D"next" =
href=3D"http://mahout.apache.org/#">Next</A>=20
      <A title=3D"Previous" class=3D"previous" id=3D"previous" =
href=3D"http://mahout.apache.org/#">Previous</A>=20
      <A title=3D"Start" class=3D"start" id=3D"start" style=3D"display: =
none;" href=3D"http://mahout.apache.org/#">Start</A>=20
      <A title=3D"Stop" class=3D"stop" id=3D"stop"=20
href=3D"http://mahout.apache.org/#">Stop</A>     </DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
    function StartSlides() {=0A=
    new Slides('mantleSlides');=0A=
    }=0A=
    document.observe ('dom:loaded', StartSlides);=0A=
  </SCRIPT>
 </DIV>
<DIV class=3D"clearfix" id=3D"content-wrap">
<DIV id=3D"main">
<H1>What is Apache Mahout?</H1>
<H2>The Apache Mahout=E2=84=A2 machine learning library's goal is to =
build scalable=20
machine learning libraries.</H2>
<DIV class=3D"highlights">
<H4>Mahout currently has</H4>
<UL>
  <LI>Collaborative Filtering</LI>
  <LI>User and Item based recommenders</LI>
  <LI>K-Means, Fuzzy K-Means clustering</LI>
  <LI>Mean Shift clustering</LI>
  <LI>Dirichlet process clustering</LI>
  <LI>Latent Dirichlet Allocation</LI>
  <LI>Singular value decomposition</LI>
  <LI>Parallel Frequent Pattern mining</LI>
  <LI>Complementary Naive Bayes classifier</LI>
  <LI>Random forest decision tree based classifier</LI>
  <LI>High performance java collections (previously colt =
collections)</LI>
  <LI>A vibrant community</LI>
  <LI>and many more cool stuff to come by this summer thanks to Google =
summer of=20
  code</LI></UL></DIV>  =20
<P>With scalable we mean:</P>
<P>Scalable to reasonably large data sets. Our core algorithms for =
clustering,=20
classfication and batch based    collaborative filtering are implemented =
on top=20
of Apache Hadoop using the map/reduce paradigm. However we do not    =
restrict=20
contributions to Hadoop based implementations: Contributions that run on =
a=20
single node or on a non-Hadoop    cluster are welcome as well. The core=20
libraries are highly optimized to allow for good performance also for    =

non-distributed algorithms</P>
<P>Scalable to support your business case. Mahout is distributed under a =

commercially friendly Apache Software    license.</P>
<P>Scalable community. The goal of Mahout is to build a vibrant, =
responsive,=20
diverse community to facilitate    discussions not only on the project =
itself=20
but also on potential use cases. Come to the mailing lists to find out   =
=20
more.</P>
<P>Currently Mahout supports mainly four use cases: Recommendation =
mining takes=20
users' behavior and from that tries to    find items users might like.=20
Clustering takes e.g. text documents and groups them into groups of =
topically=20
related    documents. Classification learns from exisiting categorized =
documents=20
what documents of a specific category look    like and is able to assign =

unlabelled documents to the (hopefully) correct category. Frequent =
itemset=20
mining takes a    set of item groups (terms in a query session, shopping =
cart=20
content) and identifies, which individual items usually    appear =
together.</P>
<P>Interested in helping? See the     <A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Developer+Resou=
rces">wiki</A>=20
or join the     <A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Mailing+Lists%2=
C+IRC+and+Archives">mailing=20
lists</A>.</P>
<H1>Mahout News</H1>
<H2 class=3D"boxed">16 June 2012 - Apache Mahout 0.7 released</H2>
<P>Apache Mahout has reached version 0.7. All developers are encouraged =
to begin=20
using version  0.7. Highlights include:</P>
<UL>
  <LI>Outlier removal capability in K-Means, Fuzzy K, Canopy and =
Dirichlet=20
  Clustering</LI>
  <LI>New Clustering implementation for K-Means, Fuzzy K, Canopy and =
Dirichlet=20
  using Cluster Classifiers</LI>
  <LI>Collections and Math api consolidated</LI>
  <LI>(Complementary) Naive Bayes refactored and cleaned</LI>
  <LI>Watchmaker and Old Naive Bayes dropped.</LI>
  <LI>Many bug fixes, refactorings, and other small =
improvements</LI></UL>
<P>Changes in 0.7 are detailed in the <A =
href=3D"https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=3D=
12310751&amp;version=3D12319261">release=20
notes</A>.</P>
<P>Downloads of all releases available from <A =
href=3D"http://www.apache.org/dyn/closer.cgi/mahout/">Apache=20
mirrors</A>.</P>
<H2 class=3D"boxed">6 Feb 2012 - Apache Mahout 0.6 released</H2>
<P>Apache Mahout has reached version 0.6. All developers are encouraged =
to begin=20
using version  0.6. Highlights include:</P>
<UL>
  <LI>Improved Decision Tree performance and added support for =
regression=20
  problems</LI>
  <LI>New LDA implementation using Collapsed Variational Bayes 0th =
Derivative=20
  Approximation</LI>
  <LI>Reduced runtime of LanczosSolver tests</LI>
  <LI>K-Trusses, Top-Down and Bottom-Up clustering, Random Walk with =
Restarts=20
  implementation</LI>
  <LI>Reduced runtime of dot product between vectors</LI>
  <LI>Added MongoDB and Cassandra DataModel support</LI>
  <LI>Increased efficiency of parallel ALS matrix factorization</LI>
  <LI>SSVD enhancements</LI>
  <LI>Performance improvements in RowSimilarityJob, TransposeJob</LI>
  <LI>Added numerous clustering display examples</LI>
  <LI>Many bug fixes, refactorings, and other small =
improvements</LI></UL>
<P>Changes in 0.6 are detailed in the <A =
href=3D"https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=3D=
12310751&amp;version=3D12316364">release=20
notes</A>.</P>
<P>Downloads of all releases available from <A =
href=3D"http://www.apache.org/dyn/closer.cgi/mahout/">Apache=20
mirrors</A>.</P>
<H2 class=3D"boxed">9 Oct 2011 - Mahout in Action released</H2>
<P>At last, the book Mahout in Action is available in print. Sean Owen, =
Robin=20
Anil, Ted Dunning  and Ellen Friedman thank the community (especially =
those who=20
were reviewers) for input during the  process and hope it is =
enjoyable.</P>
<P>Find it at your favorite bookstore, or   <A=20
href=3D"http://manning.com/owen/">order print and eBook copies from =
Manning</A> --=20
 use discount code "mahout37" for 37% off.</P>
<H2 class=3D"boxed">27 May 2011 - Apache Mahout 0.5 released</H2>
<P>Apache Mahout has reached version 0.5. All developers are encouraged =
to begin=20
using version 0.5, as  again much has changed and been fixed since =
version 0.4.=20
Many APIs have been changed, added or removed,  and will continue before =
version=20
1.0. Highlights of version 0.5 include:</P>
<UL>
  <LI>Improved Lanczos solver: graceful restarts, better =
scalability</LI>
  <LI>LDA improvements: document-topic distribution output, graceful=20
  restarts</LI>
  <LI>Stochastic Singular Value Decomposition implementation</LI>
  <LI>Incremental SVD implementation</LI>
  <LI>Alternating Least Squares with Weighted Regularization =
collaborative=20
  filtering implementation,      both distributed and =
non-distributed</LI>
  <LI>SVDRecommender enhancements</LI>
  <LI>Initial work at merging clustering and classification =
infrastructure</LI>
  <LI>Better control over candidate item selection in item-based=20
  recommenders</LI>
  <LI>Significant removal of deprecated or dead code</LI>
  <LI>Many bug fixes, refactorings and other small =
improvements</LI></UL>
<P>Changes in 0.5 are detailed in the <A =
href=3D"https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=3D=
12315255&amp;version=3D12314396">release=20
   notes</A>.</P>
<P>Downloads of all releases are available from <A =
href=3D"http://www.apache.org/dyn/closer.cgi/mahout/">Apache=20
Mirrors</A>.</P></DIV>=20
<DIV id=3D"sidebar">
<DIV class=3D"downloadNow"><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Downloads"><IMG=
=20
alt=3D"Download Apache Mahout"=20
src=3D"http://mahout.apache.org/images/download.png"></A>   </DIV>
<DIV id=3D"sidebar-wrap">
<UL class=3D"sidemenu">
  <LI>Latest release version: Mahout 0.7</LI>
  <LI>Latest development version: Mahout 0.8-SNAPSHOT</LI></UL>
<H2>About</H2>
<UL class=3D"sidemenu">
  <LI><A=20
  =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Overview">Overv=
iew</A></LI>
  <LI><A=20
  =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Algorithms">Alg=
orithms</A></LI>
  <LI><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Who+We+Are">Who=
=20
  we are</A></LI>
  <LI><A href=3D"http://www.apache.org/licenses/">License</A></LI>
  <LI><A href=3D"http://www.apache.org/security/">Security</A></LI></UL>
<H2>User Resources</H2>
<UL class=3D"sidemenu">
  <LI><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/System+Requirem=
ents">System=20
  Requirements</A></LI>
  <LI><A=20
  =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Downloads">Rele=
ases</A></LI>
  <LI><A=20
  =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Quickstart">Qui=
ckstart</A></LI>
  <LI><A=20
  =
href=3D"https://builds.apache.org/hudson/job/Mahout-Quality/javadoc">Java=
docs</A></LI>
  <LI><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Books+Tutorials=
+and+Talks">Books,=20
  Articles, Talks</A></LI>
  <LI><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Powered+By+Maho=
ut">Powered=20
  by</A></LI></UL>
<H2>Developer Resources</H2>
<UL class=3D"sidemenu">
  <LI><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Developer+Resou=
rces">General=20
  Information</A></LI>
  <LI><A=20
  =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Issue+Tracker">=
Issue=20
  Tracker</A></LI>
  <LI><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Mailing+Lists%2=
C+IRC+and+Archives">Mailing=20
  Lists</A></LI>
  <LI><A =
href=3D"http://cwiki.apache.org/confluence/display/MAHOUT/Version+Control=
">Version=20
  Control</A></LI>
  <LI><A href=3D"http://svn.apache.org/viewvc/mahout/">View =
source</A></LI>
  <LI><A =
href=3D"https://builds.apache.org/hudson/job/Mahout-Quality/clover/"=20
  target=3D"_blank">Code quality reports</A></LI></UL>
<H2>Twitter</H2>
<UL class=3D"sidemenu">
  <LI><A class=3D"twitter-timeline" =
href=3D"https://twitter.com/ApacheMahout"=20
  data-widget-id=3D"343418092434640896">Tweets by @ApacheMahout</A>      =
=20
<SCRIPT>!function(d,s,id){var =
js,fjs=3Dd.getElementsByTagName(s)[0],p=3D/^http:/.test(d.location)?'http=
':'https';if(!d.getElementById(id)){js=3Dd.createElement(s);js.id=3Did;js=
.src=3Dp+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore=
(js,fjs);}}(document,"script","twitter-wjs");</SCRIPT>
         </LI></UL>
<H2>Apache Software Foundation</H2>
<UL class=3D"sidemenu">
  <LI><A href=3D"http://www.apache.org/foundation/how-it-works.html">How =
the ASF=20
  works</A></LI>
  <LI><A href=3D"http://www.apache.org/foundation/getinvolved.html">Get=20
  Involved</A></LI>
  <LI><A href=3D"http://www.apache.org/dev/">Developer =
Resources</A></LI>
  <LI><A=20
  =
href=3D"http://www.apache.org/foundation/sponsorship.html">Sponsorship</A=
></LI>
  <LI><A =
href=3D"http://www.apache.org/foundation/thanks.html">Thanks</A></LI></UL=
>
<H2>Related Projects</H2>
<UL class=3D"sidemenu">
  <LI><A href=3D"http://lucene.apache.org/">Lucene</A></LI>
  <LI><A =
href=3D"http://hadoop.apache.org/">Hadoop</A></LI></UL></DIV></DIV>=20
</DIV></DIV>
<DIV id=3D"footer">
<DIV id=3D"foot">    Copyright =C2=A9 2011 The Apache Software =
Foundation - <A =
href=3D"http://www.apache.org/">http://www.apache.org/</A>=20
Licensed    under the <A=20
href=3D"http://www.apache.org/licenses/LICENSE-2.0">Apache License, =
Version=20
2.0</A>. <BR>    Apache Mahout, Mahout, Mahout elephant logo and Apache =
Feather=20
logo are trademarks of The Apache Software    Foundation.   </DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
  var _gaq =3D _gaq || [];=0A=
  _gaq.push(['_setAccount', 'UA-17359171-1']);=0A=
  _gaq.push(['_setDomainName', 'none']);=0A=
  _gaq.push(['_setAllowLinker', true]);=0A=
  _gaq.push(['_trackPageview']);=0A=
  (function() {=0A=
  var ga =3D document.createElement('script'); ga.type =3D =
'text/javascript'; ga.async =3D true;=0A=
  ga.src =3D ('https:' =3D=3D document.location.protocol ? 'https://ssl' =
: 'http://www') + '.google-analytics.com/ga.js';=0A=
  var s =3D document.getElementsByTagName('script')[0]; =
s.parentNode.insertBefore(ga, s);=0A=
  })();=0A=
</SCRIPT>
 </BODY></HTML>

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://mahout.apache.org/images/mantle-mahout.png

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
RK5CYII=

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://mahout.apache.org/images/mantle-hadoop.png

iVBORw0KGgoAAAANSUhEUgAAAgEAAADKCAYAAAA8VpM/AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
AAAK8AAACvABQqw0mAAAAB90RVh0U29mdHdhcmUATWFjcm9tZWRpYSBGaXJld29ya3MgOLVo0ngA
AEAASURBVHic7L13mCVHee//qapOJ0zc3dkobdDualc5A0IokaMIxphofmBjLhi4gO/FXGEDxmBs
g83FNuFnY4OJxrJNMhkkhARICElIq5VWcbVBOxsmntjdFe4fPbOMRufMzArZ2tXU53n6qepw+vSp
7lPvt956q1o45/B4PB6Px7P4kI/2BXg8Ho/H43l08CLA4/F4PJ5FihcBHo/H4/EsUrwI8Hg8Ho9n
keJFgMfj8Xg8ixQvAjwej8fjWaR4EeDxeDwezyLFiwCPx+PxeBYpXgR4PB6Px7NI8SLA4/F4PJ5F
ihcBHo/H4/EsUrwI8Hg8Ho9nkeJFgMfj8Xg8ixQvAjwej8fjWaR4EeDxeDwezyLFiwCPx+PxeBYp
XgR4PB6Px7NI8SLA4/F4PJ5FihcBHo/H4/EsUrwI8Hg8Ho9nkeJFgMfj8Xg8ixQvAjwej8fjWaR4
EeDxeDwezyLFiwCPx+PxeBYpXgR4PB6Px7NI8SLA4/F4PJ5FihcBHo/H4/EsUrwI8Hg8Ho9nkeJF
gMfj8Xg8ixQvAjwej8fjWaR4EeDxeDwezyLFiwCPx+PxeBYpXgR4PB6Px7NI8SLA4/F4PJ5FihcB
Ho/H4/EsUrwI8Hg8Ho9nkeJFgMfj8Xg8ixQvAjwej8fjWaR4EeDxeDwezyLFiwCPx+PxeBYpXgR4
PB6Px7NI8SLA4/F4PJ5FihcBHo/H4/EsUrwI8Hg8Ho9nkeJFgMfj8Xg8ixQvAjwej8fjWaR4EeDx
eDwezyLFiwCPx+PxeBYpXgR4PB6Px7NI8SLA4/F4PJ5FSvBoX4Dn2EAIIWauLjCdffxCcB3yblb+
Qcc552Z+xuPxeDwLRPj60zMfMwRAp3QhQuDhiIBuAsCLAY/H43mE8CLAMyddBMDs/EJEAV3Wp+lm
3B2dhUAnYeCFgMfj8RwBvjvAsxA6Gf3Zy+z9sz+3EOYSAA8y9lPnnG3wnRBCeCHg8Xg8C8OLAE9X
prwACxEAsssxdEjnYi7jP5cgmH3dxUm8GPB4PJ458d0Bno7M6gboZvhnpnN5B2amczGfCLBz7OvU
TfCrE/sH3ePxeB6C9wR4HsIRCgDZYft8ImBmfq7RALONv+DBQsB2uvwZxx4+36zRDcVGLww8Hs8i
x4sAz4OYRwDMbv0rOhv/2d0D0FkEPKRPn4cKAcuvDPp03nY4bt5uglnf86Bhj14QeDyexYjvDvAc
5ggEwMxlIV0D8GAR0IlO0f6zW/1zpfN1C3TyOHRc94LA4/EsFrwI8HSaCGihAqCTEJiZn3m+meef
zXyjAuYTAL+uEPBxBB6PZ1HiRcAipcsMgNP52QJgPhEwlyeADmknfl1PQDchMPvcC0ln54sN/s/i
8XgeY3gRsIjoEBzXyfhP5zu5+ucVAWEYyjzPO53vcBoEgfjT97z7zj0772NicpS+vj5WrF7BE89/
EmvWr/v+pk2nvG7q+CMVALOFAF3WjySly/qDd/o/0hHRKVDzSPFl7vH8+ngRsAiYw/h3So+kG2DB
noCVK1fGywZ7bh0evpfRcY0UkCQQJ5BlkLbBOVi+Ai666Ol89nPf2UjnoYEPp0ugW3dDp3ynlC7r
Hbd54/Rg5jH4D0cMdC1fX/Yez5HhRcBjlAW0+qfT+YIBj8QT8CAhkCSJXLd+1Z8cPDDWPzo69rSl
A3DhRUt55vPO4PQzl9I7mCNlG2skOku49kd388Mfbud7305BwKWXXPytf73iqjexcCEwez8sTAzM
JQjmys+5b7EbpHmewU7rR4IP7vR4HgG8CHgMcQSGf3babenW2p9LBAhAHLdm+V/t2bv/OdUe2Lhp
Nb/3e8/nhZedQlLajwwPYOU+wmicmMJi11NBKVxDs17l/vvavPuP/5HvfBtOPbWHffurW/fs2Zcx
t2egmzeAh7GNOVI6rHc9djEao3niTTrl59o2zXxemI75xVj+Hs+R4EXAMc6vafhn5o90SGDHroBL
LrzgvKuvvuZzS5clvOBFz+Ctb38tK1YLwngXIbcRyAMYmmjbBJujlCMQaupSHJONJr2VtWS2lyu/
ez9veP2V6BZc+pQXverTX/i3nzC3wV+oCFjodjqknbbNKxwWizE6wldOz84vlCO5F4um7D2eh4MX
AccgR2j4p/NH0gXQyRMw17oAxOPPOfv1N9zwi7c94fyt/M1H/4JTT9uMCEcQ7EFzK4JfItwwzjmU
DCnmqrKgNdalONlCqV4yO4pzAzi9lp13Bbz2VV/ijh3wwt987pf/4dNfv5yFxQAcibG3HY6jQ36+
dM5uhce6MXqYr5yenZ+P+QRAx/vzWC97j+fh4kXAMcIjYPhnbptv6TYyoNs2cc5Zp712+7Zb3v6m
3//t4PLL30rPYBmw6HwXQbiHTG9HubtQwUFwbUCDsTgnEbIESoHO0K4FIicI+3Ak5Fkvh/Yp3v2e
r/EfX4GtW7feeM1Pb38JCzf28+1biCfgSAx+13M9lg3RI/DKabqsQ/eumG5l32nfY7r8PZ6HixcB
RzkLiOyfvW0uwz97fT4vwEOMPQ8VA+Lx552z7obrb/j68593YfzPn/07Sr2Wdn03SSUBkYHdSTu/
E2XvJoxGQLWB1tTlhGADXGoRUQRSA02MzVEqxhJj8jLDw1X+9H1X8x//3mbV0NL7f3n7oacyt6Gf
vX4kYoAjzC/4XI9FQ9RhpsmZ+dlLp+NmpnPRTYwtVAQ+Jsvf4/l18CLgKKZD62pmfiEtr5n5I/EA
dDX4s485eeuW/vvvvPcn555zRvCN//wi5f4aiDtpNneRxAoZVoEc8l00WjdQ6dVY8wBSaXA5CAVE
QAhGgzBTQkDjcBircDYi10Ps2BFw3XWj/PE7t1FO4OJLL/utz3zuqzey8NbgQg34kZyr22K7ff6x
YogW2Prv9lKpIxUCcwmAIxFjj5ny93geCbwIOApZQHDVwzH8MPdrf+cTAg9anvi4c9/481/8/HHA
E5SE884rMTgQsOXkPs44u58tW1eybu1aeqtLwAbAJMhD1CZvoKc3wJgGSgU4UnRqCaK4uEgBMC0C
LA4wVmJMD/fuTNm7R/Cza/fwrW8abr8Nzn/CiTd98zs7fosjd9/PZUwezmfmG6Uw+xzHlDGaY6z/
QgTnI/G66YWIgLnmjIBjuPw9nv8qvAg4yjiC4KqFtK6O1ODPu79aqQZ9lfivm62RZ7z29adzxrkD
nH7GEEm5xXGrexGkWJoI65AuwVoIFUgZMjl5F729FcBgzBhKWYrgwBYQ4MgQh+tojcPg0FhnsTYi
UquZaLaolns5NB7xsb/9CZ/9tKG3V7J9m9ya53pmgN/h9JUvefHFAjaNNya/+bVvfGfXjH0LMfzd
8nMZH8vcQmDmNR5rzDbU3Z67bhNILfR107OZXW5zjQ45komjPI8AXlAdu3gRcBQxh3t1IYZ9vv2/
jhiYFgAqa9Rv7+2H7171Z6w9wRLGB3FilJ5AkzKKpYnTOVEQE1IFUtrZBEo6wiAGoNVugBME0qFN
k1JZkelJwkACFgE4DGCx5DgycII8C4jjhIn2GNr0IcXJ/PTHDX77lddRSWD3brbMKE4H8NrffsqH
rvi37z+3nRYbTzmlwi9uasycjRC6G4j5PAHdJjCaLQI6dQ3MTI8VOgmA6bTbMzWfGJh9nm7MJcK6
CbCFvE/C8+vTsSy9MDg28CLgKGEeAfBoLgBi5coVSePgyC19S3Ku+MYb2LBFUqkI0JLvfOM6du3c
zcjIXpYug5WrJGuO62Pd+lUMLetHSgk4cjNOq5XRW92MzR1Sxlx51beo1VpcePFq+vpDHOlhESBx
OFeIAEeORCEIMcTkrkQrT9izO+R735rkvX+0hxc872lf+8xnv/uOqWt2T7vkyauu/tEPfvicF8Pb
3/Ec/vPrP+JjH61xyqYNXP2zezfRvaU/Oz1SA/RYMkTdDPN8z+lcI0vmErHd6HYPZouthZT9sVT+
xwKdyvFB27wgOHrxIuAoYUoEdKtYu1WeC2rBz7F0+q7D+1avXl3asGHD0+64445LG5MHn1VS8P0r
/5LTzhtBcz/NZsAzn/JZdt4BoYT3feBENm2usn5jif5BR6kcADnW1EmzOqVSgraKrNlHpJbyR+/6
CtVeuPyPn0SzvYuklAE5IHAOhBUgDI42QrRBG3QOxlVIKisYmcyQwQlsvzXhw3/+A777zZyevqHT
9x84kIdhwLIevb3SD9+75lV847v/zJMuOI+//ovr+doXodYKt+Q6nz298ELT+QzQkRiiYwnRIT+X
CJjvVdOdBEAnIdBJkHWaKnqusu/mjTlSZn5uLtHyWGY+o98t78XAUYh8tC/Ac5hOlWq3iXrU1DIz
v5Bl9kx/D9q+efPmvrPPPvsPSqXSP0gp7zp48OAtP/3pTz908ODBZwkJn/zHd3LGeUOkbjftfJx3
/eFnOX4FVCJ433sv5pxz17L11CrL10BcbuHsJNhJhJykVMqBBlk6Rrka8c3//Aojh+B/vP48EClJ
SQMNoIlwOcI6sApMACZA6hAZRkShJM/aCCoE5niG7wu47uq7eOolz8IZOOG4nl/+7que+96+qt5e
XQL//KUX89WvfInxEaj0jvGKV26i3YbfeNZz38uDDVK36ZA7lVu3fd3K+Whb5hOHc31uIefvVC5z
lY/q8rm5nte5nudf5x4cSdk83HI8Fpe5ftd8Iu+wWHok3h7peWQJHu0L8DyI+dyqncTBXB6Bbuc8
vH39+nXlMDLvufOu3avvvOvOx/X0JKzfsJpLL72U49ds4FOf+nv2PXAvn/jE5bzoN0+h1b6ZIIFt
t93PrTfCq19xCq65jbPPWcOataNU+yYRtLGmDSJECA0iBxxtPUG5tIFWbYQd2+FNbxxkcKmj2bqf
cglyFI4I5xKEk8UPcxliql7PJ9uE1QqlkmDH7Tv40udT/uHvYWICougeTj6pzI0338Peffe8+JnP
lvzPP3gut932LW65KeOdl5/Msv42e+M6W06Fb/3wP14SBuF7OdxScS7X2gEiCEMAojAQgGs2WxZw
YRiKPM+n80zloXPrUtB5JsKjwRMw13fPVUnP5wno9EzOZUhmfn6+7+7kiZku45n5Tp+bq9un2/c8
EjyWDN5c5SVmHTO9raPHYFoIeK/A0YEXAUcP3Yx/N4/AXMZ/PkHA2rXHlZPE/cmdd+18/tLl8IIX
ncPznvtyzj77XE45aQO1eou//uAn2HPfvbz5Lc/ipS8/h0z/gCgeQzd7+ORHtvOO/72Ge+7Zxsv/
v+X0L9tN36AgyyZQKkSpEIjIsowoSoAWYRAAo5QqSzntZDhxcwnUXoJgEhjE0MtkU1EpL6FeP0R9
fBfHDfWitIYgRgtweYxKApIeyeCyMV7+8kE++Xf70G3YfluTZzwj5uWvOhcV7efLn/sqtRq8422r
WLkkI2/WGBocZN1Jh7jpLoMT+fYECHNQRLSJCctVau06qByd52BAEWMIyKfbmGlOkOckQA3WMbdh
mWmojuU+6fkEQDfh+pBnNQxDmSh3b+o0QQStNoQCKiJEZxaDwoYKGzmyvE1oiwklM1MmjiuYdh2h
2wyuWL5p3/DwzBdLdWKmYPh1RVi3+7uYmF0Gs13/swVAJzHgoPAKeCHw6ONFwNHHQtxuCxECs891
eP3kkza9Z+d9d71MG/jA+9/IS172bI47fi2NuqKvOshk8wBf+Pzn+NCH/pKXv/xiPvD+NwLbQO4h
zeuMH9CsWg4bNgyhgmFWr4hYtjzD6hphYIAIk1sQmihKMG4cKSyKEpDSnBjmkktXEZXa2HabKKkw
WpPk+ni+8KWr+NcrdrBxA/zR5esRMkAFijyrkZQrTKZ1pBD0Dazkoou3IO1ZfO/bf8Xd94AM4K1/
8Bv0Lb2PO++6i9/7H+vo6xFEQQOhh0lw9AR9nLBxGU4OgwKdQww4FJEqM9lMYelSaNaAHKTCyD4Q
EkQTogQpU2yzzgnr13DzfXsk3Y36tADoZICOBSEw28DNJQQ6PYcdvQBPeuIFK3569ZVoAZkptmZA
lkJP30qaLQNWg7YQVMiFIbcGjKTVaoGzDAwuYd/wsJk6dzejPl3us0UYHVLPkdMtXmZmfq7ydV4I
PPp4EXD0MFer6uGIgNkuVlGpVIIwcB+7c8ddF//Gi57M+//sXazfsAZwtLI6vdUBclvn5z+7nj98
xwe54EnH8/FP/DFEu9H6EKiUKJJsu+3nPO4J6+jtjzhz2UmkzRZxJUTnGYEMAMHw/oNEUcKyoQG0
zglDS+6aRCKhPFClNXkQh0GGfcAG2uMl/vcffI+v/AcEIdx+A1x03jgDz1nP0iUOEUzSzg/RW4lp
5E0qlRwrHmD4YIsPfuS5PLBnjLe+7RoOjf2SzaeFHLdhiFiO43SDILCQGWIDvUHGWVuHSBgmmzIP
SsQ0nCS1DoZW8oYPfYhwcBCDQ4oQ1woweU5SUqjGOFd//tPcfOUPWLLmpO8ytwiY7bI+Fo1QNyEw
lzdg9rP5oGe0t1x6e27BHd4aQNhLePyJvPL3L6eyYi06KVG3BkKByDWhrrGiavnipz7K9h9fRbRq
KYwemikAugmwubwAR3vZH610CvzrJgC6eV8O3xcvBB5dvAg4eujUgu9UmXYN2DnllJMHZOjedMtN
298/4zwA4swzzlh28803X9PfB1/+8sd4/gufiTN1ms1hSqWQJIrIdYNf3nw7r371a1i3VvLZz38E
Gdcw+U6MG0YGhed134F7edITz6dUMvQN9HBguIazDYJAAAajHdtv28/QUJklS/qQUuIQOCHQZNj0
AKWeCKs1aUtjreVd7/geX/93UBbyHMIE3v2uMeJojDWr4LzHh4QJjI61iMowOjbGvfdM8rWvwr4D
sHQQSmW4b+c2Lrh0I0mpRatRQxhwFpQuCkKJBmtWr6TaA+PtoibKsMXAxDCiuvV0Vp56HnUVcajW
IAjKSJdQloIKLXqyGnfuPkDaMgysXH3djDKeKQam78l8RgiOfkPUqfU/nT+SboHD2+/Yvu3k6cIy
FgjKQJlc9VLddArR0rVYBaQgQ5AOelSKnbyLu+/bBY0GW7Ze8p39N986fZrpWICZcQZzeWC8CPj1
mEsEdFo6xWrMPo/nUULOf4jnv5GF9K92XE476eQ/vv++vb+Iw97G7M+dftqZy26+eds1Wzau48rv
f4tnPuMsYBjkGOWyRbMLwUFqE3V+73feSJLA17/+Bfr6U+Agk41tRNE41rWoTR5iYBBK1ZyBJQmt
dJT+gRhHE4TBOQMuYMcd8MDeJkYrlApxGBQhlgArwDkHKiCpDvLlK35CK4Ozz4b3vf93WLsBwhKc
fjZs2FziiU9ag8UgRUI5SSgFK/jMpybZ9kt4wfOHODAMm0+Ek7ZC1oJQKRr1GlEA1WpRCEEk0BJS
lRFUmgysAC3ACGg4M+Xujzjh5HMYz0JqpoqNVyB7l9AKK0zYmJFWm4l2k7HhByCAH//o21+e5750
G6URzMr/dy4LHUky1/ELPU+ngECxd++eLVAIPokE7UA7Np5zNj0rh6ihqZniDFJN7c4MVRFjx5qQ
h+QP7H/frP9Ip7Kf71483LI5kuW/+/7+dzw3Cymr+UYYzPZYeh4lvCfg6KPbH6VjjMAZp2/pv+fe
O27ccmqV3fta1GvjfcxoEW3ZcmLvjjvuuGbzCev49jf/nePXJRAOY+1epJRktkYkIzJrufyd7+O2
Ww9w7c/+geOOXw7sYbJ2PQP9gonGTqqVMjjDqjV99A9KoImQGWGoENIBOdYqpIg5MAxJBMYFBEi0
0ygR4rCEYYAQAZMTI2ijufiS9axaLchaJ3HWmSfz9e/De//idJ7+zJUYs4N6cw8DAxVarQxJiTu3
D9NXgde/5im86tXf52MfX8P6dVtpjH6PdgsEmmq1TKveJG1ArCQyKKFlAxtItGyybCXcdSvgwCGL
gIKoxKlnnkeWK1IEuQlRARR6RVGmyu67tsFkDbDs378v56GV2OzugSONTv+vZqHf26lynismYD6v
gADYumVr9Y47bv/VOD8bFHNEKsHAypWMths0KCPigEiAcJCbHGfajOzZix7eD9bykx/9YKTD9Vge
HCMw2xPArPxs/ivuyWPFyHULCJxdrrNHa8w+znsFjjK8CDh66NT32skjcHg5+eRN1d177rjxzX+4
iQsvOpPUjnPTDXteEQTBB/TUcLc7795xXX9vmW9+8wqO37CSvHU3YTiBlBNY9mLJODAmuPGGfXz+
89fwN3/zFs4590ysuYfcbKO3Z4LU3EdfJcBgEBiGhiqUEoc2Y5RjgdYtnBBYlyNFD7iAVhPuvgec
jdCuaPlbYclabeJSP/sP7GX5UC8Qo6KUUyu9DO+7nz/76Fv5wF9v4vj1llrrx6xeUmWiltNs5ChZ
ptXKGR+H5zxrDa3GOEsGYcuJy4jjnFIJzj6jH2uajBxssqQP4krM5KimrnOECjFBjFWO3t6pAndF
DIOzhWdi9dBKwqhCHIakGrImCAGRc1SDkKt/cQtYxamnnvXzW2/6wVwV/OyAtUdTADzc7ztSITAz
33F9w9bT/8/td9+LBpQ2ICKwIZR6OOWss5CVhFAm5LnD5BZpDOXI0uMk9++6u7ghcVC8Y6q7AJvP
/f9odccca4JgzqC+GenMZVp4TXfHTBv9aYEGDx4663mU8SLg6KKbm+xwhXrqKaesuHXbtoOAGN57
198/78Wref0bX8zHP/FPXHnVPmpjoAgEwNr1/R8dGRnnC5//JBs2LgUzTFhtg7udRnYXKqoRyF6k
GODdl3+Gc8+Jed0bXg36EDJoEqs69da9VEttHDl5FjA2NsLylf1k+QGiMES7JkGQoE2jcPkrhc4s
OofhYTC6hM0tKhRIZwmUw9gJlg8NkOVjOBTVah9C5tyz8yBvfPMSlq9oI8Qw/dWcidZ+KmXQKSgl
iCNJtQJDQyXu3HEfF10E1o1Qr49hLKxYFRKFGhVCswmZSFEqRsiING2h4ohIKBIJsQWNQCDJMQxu
3Eh/fz+TxtDKJEGokA6iEEJnyVs17rjtZrAZmzet/fqtNx2u8Gbfq4UYoGOtAuwkUudLZ4sBbtt2
y0lYc3irc1P2oKfK0JpV1IyhjUZbQaQUkQqwLqXZmOD2bTeB0GzYsO62e7cd6lT2na65m/h6uOU/
83PHmlF/JFhIPMBsATDN9PbZz4rnUcTHBBzdPOQPc/DgoVFAbNq4oRJGPO7yy9/Jwf1NRvYLlvX3
019Zw+c++6+3DQ0NJbt2jT/lJb/5FJ7+jAvR2W4IdwPbcNxLGO3DchBBylev+C47boM3veEtQArB
OLneQc49RHEDyDB5TrNWZ2jpIHFoiUKHo44gw9EmUBGhijEmRZuc5UNwz11Qm3CUo37y3CCMJhQO
bAujx5ACpDBYPU4UNHjc4yKWDlhCMYkSKVmaEQI2LR5U63KkSjluHWh3gNGxES6+pBclxylXmrQz
2LylD+smUQqCAKQUOOEQWBIZoFo5iYYBWcwP0CMiBAYCxeZTTqKpU2SsMNJgFWQCUmHRoo12E0zc
80uQLa6+6htfm3lfeKiAmy+O41iYWXCu/vVO/b2dAgEfVEa779q+VThNSWkSNJIMMJxw0hZUKCFU
tLVBRCGN3GCVpKWhVK1wy/YbQTR59nOffvICy36ue/Bwy/+RmJXwWF66zdrYLd9p8TEBRxHeE3CM
Mbx/WANy7drly0dG7kWKiEppJXt3Nbn4/OfwrGe+ljt23Mrk+MSNG9aV+NuP/ilp+17ipE67cSMy
uB8t7iWMUspUGT40xr987ibOOzPhBZe9CGjSTrcj410oJpAyxzlDEFaIwiaBAikMxcjuHITFYRBT
DQDnBELm9A3C+DiMHGzTv1IXLxFyBuWmpnYXMDVEHOcsUrSolCRxmKOEAaexdqrWEAHOCaw2OGkI
Y4iinKEV0NMDUqRkWZs1x4FjlCxPCW0xB0CkIozRICASAicktqWLKQAA49oYBDjDktUr0HFAG0Mm
BUIWvQU2EOg8Y+/OO6E2AiXJF778hZufevFTTpq6LUfSKp19zLHgEZjqzz+xFAaBBLDOCRw4AVob
AKy1zjl3+PdJKaWSUjjnhJRCvPTFL7z+Ax/4AMZBlhWWAqkgUKzfvBGDmHISKKQEFYRo7QiCgInx
cZr7doO1rFk5xI3bb/nCWSed9jJ+VZ4zy3ZmWbtZx8zkWCj7o5VOnq3ZcQCdPjMtzGaO3vBC4FHE
i4Cji/n6Lw9z/c9v3VUuwYHhGnuGh/nxleN84v8+AzB88IMfIM9S3vaWt5OULDBGmt5CVLoHKfei
OIBDAIPcddt+tt0EH/qLNxfj8hgmiB8gZyeCCbTJiFXM+MF99PQsQypbtJzRCHIU4KzDYbDCIKRC
BRnHrwuYHNfs2zvO6k2WUlUhcodwEucETjoQRdCdmPqZlUQUAsNajAHlQCApHlOJtW2ElEhpceQM
DQWUShG5Ntg85awzIVDpjNfHhKioQpbXkBI0lszlpDphbAKsgNQZjFIQBSzftJEsSWg4Qa4CnChe
X+ACgU0te+7YAe025HVe/OznUE3YHldKTLRzLAGhFigLCIsRlkxJHAG4GGGLLohMa0yeE1bLlKKQ
+ugBqsFUd4MxBKUqoy2NLPdgRYAKIky9DkKTRBliqjP8SBFOElDCWYW1Fi1M8WCFChWGyFCwcePG
n8WCt1z/k2vHpj932W+95E++/Z3v/FZar3HnHTsKw83MiQ8UDokQEjv1qApX3E8xdWRR41v+6H0f
KPbHgqAUoDOJdQFIwUnnnIt1EqEhEALlipdS6TSjHAt27dgBoxNUg4DL3/wHvKdUPqO3b8n2yYlJ
UCF9fX3FkFA39b2usDUOiUOBcAiyqWe3SxlNTWuvlCIIArTWZFlGGIaUK+X7L7r44k9fccWXPz99
/EUXPmFJHOo/v+P2O094YN/E6jhKaGUOXEBcKoOUZDrF2BwpLBES6brFxc2NFZJ2phFJiTApkU1O
IgIBWZPl1TJ5uwFOQhQzmhqcCKFchdyANURxiGvVUK777y/e9tnt+8EoR1ipkGammAwsiEHAsqVL
7jv5xBPuuOpb//nGqcM71VmOwvhPG33vCThK8CLg6KFTi6Vr/9vkZN2cdvrQN/78zz/0nA2b16I1
fOz//yN+ft199PX2USoHvOY1v4nJ9yCCO4nivQh2kbMXhQYSGq1xrrryOoSD33jRy0A0MG4XbbsL
pUaxaCIVgXX0Dy4pLk8CQlO87U9TtOeKmB9HjpACKdpsOGE1zt7P8PAkaRpT6ZE453AOiiZ24QFw
YjpAD6TQOKcLF8Hh9sR0tW1BSqDwEDRbeVGxuTbOGZQSbDkJZJASWIEgwAiFEKIYtigDMmMZb+fk
VNi1D3IJuaXoN1iylL41x5MHMalVOFWYOyGYEjqKBw7VQZUhSRivj4EMqE9qCErgFKkNpu6OAWGn
flgALsTZgJbOi2P7+smx5LU6qBgZh9Qbhd2dbKVQXYq1EozAOAGqBElEO52YKvuH83TJ4mVMSJDi
V0+aNsUYvJbhlzfe/ngCcV2yegNnnXrKD2/46U8u/eq/foWieS4xKsDIsLgP1vErr6/AyeDwI1pM
+2JxU96hwuzJ4nNRiEvb5NoWXgAZwbI1RCvWkYkSyBLCKXQGIRReKAJuu/kmiGJMs4EVEa2WpZXm
UF4CmWGipkEkv/qLiKkGp5j2QFuwhTfqVw3RWalQUzMVSkhtEbQYlsgsNMbaa6/4ytfejZTvvvTS
J31n2y2/ePq1V/8UgKQERkIDWcxvTEgrp1BDrigjC7R/HXvngEjhnCJrAAMrcbVxkI7xZoa0Domh
1cpw5UHIHbgEKCbKyNoGZIV8LufHnPP1WLCGvG5AxlCuQLMFDg4eGF9/1e4fr0eF917wxMd/95qr
f/w6ftXid7Py0+k0Yta6578ZLwKOXuYKLgNwzi5/31VX3/qct/7hK7jq2p+Rqvv41Bd/h49/5Kuc
e+YFJBUDpEw2thGX7ycUo6RpjUrci6SHKBZkGeQZjI+PM7R0lLa+ExU0mGiOs6J8PFqPY9pNwkAi
4xjIwOnCyE2HaIvi1b8ODViccKxcvZre3vs5dHCCNO3DHRYNoF0wbS6w5Iip7gFnwdqi7hRyqnaw
FkNWzCsgHHKqyshzUHGONjm4iDAQJCVIU42QIIVDu5TMghEWJ3OsDJnIBBPtMjunRICbMtSV9VsJ
egZpEYAIioHQBqR1KAROlFhx2gWkxCyRmhVLemnZNm3jGMshTiqIFEJrEWicMOTKFq1kG6IcRMKQ
6ZS2VOzceTf17b+E4d2Mt2uIqIzLDZR6eNk730W8ai0mrmAJMJN1IhUV3ok5/rJzTromNNa0kcoh
pUQIgbAOpw3oFJXn/PyaH3H7VVfSHpvkJ9+95lJsRowiwNFSZWzSCz39qC0nccGFF3PC5i0YJ8i0
IYgjsnRKoIgps+8sAot0hT9A5yFhECNsu+gCKkW0nKUtItIlG2jqACUV0kKaQjmGJI6RusWO27dD
5miJCERctELjHsonncoJJ51C0tuLweFE0d1kBYUXQEgsEukgmNZlTkwZ6AenSgYEoQInsM4ghSLN
2jywdx/7d+7A3XYdiJAfXnXt04VyhLEgCALqrbwwjCTIE05k82lnM7h0eVHOWALryHC0whK5fHhC
ILSOIRUyMXII2dvHTbfcQPOG66Fcpj0xQiQk1kHYv4RnvOy1HNSOqG8ZNgeVZuQmJyuF6O6N/Tmf
H+kcvYEgDhVjtTbGQm9vHwf27eWOn/0Ydt0NYcg11/7saa9+zW/v/PQ/fmYdDx4R0M0T4LsDHmW8
CDi66GT0uy7XXnvryAkbue7b//nTx33kr/4Xy1cN8vWvfI/btx/kkx9/EfAAExM30tensTSRWKpx
P5CgbU4o+3j+C8/li5/6Oe/907fxd59+JRPNu1nV6wjLg4zXJtEtw2037eaiS9dRxAGkUy3d6eb6
r9yL1mqE0libUe4JWLoUDh2cpN4KyW2KEGaqzpU4IXBWYkWAI0NO/Sp3OA5AgJMYYbHOIiQYUzTw
BBAGMwqocC8UjVpTtE+FVAip0a6NDAEhcMRkacI9O8aZHJsKXZaAiNl62nkYmaBdUNRObmpGFOdw
2iFVxCnnP5mzz7+UHtskbU5iAkcuA6j202ykVGSJwFoUKaDRauo2OjVlhDIyk0GlipCGbGQfP7ri
S9z8jx/H6RSCiGT1Wtad/Xja/UO0ghLWSEraEodlWoQYoXh4GITIcS4/vCVAoJxFGU1oUzaefh4T
l72Yj/zJuzH79sDkGBkplahMI4fBS5/FRS99NWef9zjGJyYZm2gwMDCIkAH7Dx5kSd/gYQEAbsr1
XXQH4AKEK6HznL4kpJk20cpRUkAYc6CRksiYwBTG2pnCE1AKLLo2Dg/sgTCCQIILOfV5L+aS5/8m
yZLl9AytopaloCRWFt9rxeGrwE67+W0hBrrhnEMpRZ7ntFotlFJUKpXi2Z48xD3XfIt/++sPgBE4
k5OFkqytIehh8JSzeNFr30Dv8ZuoDK0mtwE6zYgDRVkptHDUVUSmZOGVEfaI0thooolxlgz0cf/E
OBe98lU0D+zlI3/4Vmi3ybImCMmGM87h4pe8nBEZQ6kf4RQV7XBOMC4tmaLr9ygZdv3+wGnCPCdt
NQjiKmEYY3VOiKX1opeyZ/sNfPFPL4dSL5/+p8/z1a/+x87LLnvBWjoHbcJDhYDnUcKLgKOHmYFM
zEo7LQCuWV/+mr/78DW3feVfbuXAyAT1BlzwhOWcdPKJWK6nt69OSw8TBRJjKygZAY7a5Bg9fROc
fc5Wnv/i+/n0P9/Ic18hOOP8MuPsJSEklMv50Ieu5n3v3QphBrZRGH9ZCACHLVpRdro3uGj5GZsi
ZcaSQRgdhWazjnU5TtjCIyvAOImTIc5JECHWWZSTOBzWxkCAcxrjWljhip4AB8YKhI0JlSDXraIf
14ZFoKHNCBQ4G+KQyKLXgSCAXEt0U2LqJX7yvR0EWVGAOlBgS5xx2hNwJgIVFOcyoKQjkIY8z1FJ
mYaGthZEcYW6zejtHWD/6ChSRxBFCAOBgNApEBkWM3VTVRGEKCKohEwKS6tZZ1nvSp7x/JfS32xz
1Wc/A1qydsPJRD3LqMd9mKSHPAOVOXJrMcJh5+jTnRtBQAltS1jrisavECgJQWAJXIoJUno2nMjv
vPNdfPKNr4XeEi7VjOoWT33173Lx6y5nr47YtWeUMI4pVZfRSh1OSAaXrqA19T4/ORUToFzh1hFT
T6uxDmOg7MAFAZnMaVtNIGMGBiowWTxmAiiTE5uMQLeoDe+EiUOFuzquctmb3s55lz6ThurDlPvY
09C4oBdhBJgiZmVm09IdbozaGSLloTjnUEIhwwgRlDHOMWnBWkscVjj7yc8mjmO+8N73gMsKxSnh
tGdfxjNe8nLUqhPIKv0cCKq0jUDGEAsYaefkzSZhOSo088MQARow5UEesAH1vqVMSsOyjVt404f/
L3/z+78Lu+8DJOvOfhyt3n7GianbEFxAj3VETuICVfxnu3SHpJnr+v0pAdZGlJcMUjfQampilRCj
KQ+s4qyLns6+Xfdy1T99HKTij//k/cVD110AeI4S5nAOeR4FFuQBmLGwb3h/NlFnc5ouPeukE897
um3DhU+8hGb9fiT7Sc0uQmHAKpSs0Gq0gICB/j7a6SRpeoA3vOk5rN8I//Mtv+DAnhzlVpDlCX/7
N1dz2fMGEaUQ0xwvmmfOFJWDK/qFrdNYlxateUAii55gm1OtQqMOeVZUJAJmOACnKh837ZOXIAJw
EbgAZwXGWbS1GDdVVcmiojbGggvRugh4E9IVsQSuMPgChzFFi1frwruQtiT1yQrtRj/XX0cRYmAB
l4CKWbN+ExqJEMV2oXOEcKAkzqniskUxzf142+HiKhMtWDI0SJYW3Rd6asmUIFOSXCqMCDEiwIgI
E8aMt3KMiKj0DDLecPQuW8sTLnk2lAchiDjxlLPIRZVaM6DdAqMhV4JMKKwIikLosgilui5OKbQq
usWtEjAlAJyEtpLUVcwEATVCVm06laFLnjUV8hFy6gteyMWveBXjVhHEVeLyAKgyxgUgQoQUtKdf
6AtTrXCBRWFd0YXhCJBCUK6GNC3UU40KQkrlCs1mm7ztiBQIY5FWE4SQWUfabNA6sAfak9DTz0Wv
exNnPvnZpOUlNGRM3YWIagkdKrJIoqMAHcXYIMapGCFjpAxBhbggxoQJJigVS5jgghipYlAJlMo0
XUAtAy2K4zMnyVGYuMqICdhw1vmUNp9SxFeImKWPv5BnvOL36DvhNNKkn5orM6kFTQFNAXUBuhQS
DfThghihYkQQzpFGyCBAqAgRBIe3O1XCxBXGDJi4TB6V2VPLaEd9vOB1bwAVQRyyeutmDqaahovI
gzKqFKHDmDwMyZFYGxRdd1YW9t1KrCu2SxUiZVy8CnwqlXLq+4MQk8SMtaFtICgHZJGkqSLaYYVx
E3LZS18Dy9eAC9j/wL7pf/tcHgBm5T2PAl4EHD0s1PB3Egrcc989jauvuf7+UHH95g0bKVcElt0I
9hMohRIKnCZOAEaBQwRKE8Z1evv38+cfvIDJ/fDut/4M0TibKz73S+66G849fx3oSVSSAAHYoLB0
RiCEQklANtC2RqAiWrmhGiSkaV4M8ZNgTYhOZRHspUDJYt54RQxW4myOcDk4g9YaY9s4mZLbFkkl
KWKckFOtc5DCkrablOMKoQzJ0xZSZCRRITqE0IShIVSCUhSQtiCOhhibXMZV1wyz9xDkAoQqXMvR
1pMRvVVyIcjSNiXRpicyOOdoaYkRMe28cBLk2lHPm0SVkCCEiQOWJVHRgi1HMNkYxyYGG0tauUZG
MVKEZNrQdBlJXwnbtsgUeuIlTDQUldUnEKzfCHHAktWraeoKPZUSYd3QSyGiRFwYV4vsuhgnui4W
iwksqbSUkiK+MMpA5dAwkJUkWRBgggppGnP6lseDDmFgFU/7nbdwoLqcSZVgo4hcCJq5RQbF234r
JTC5QwlIQtBpShxBEBaiLNNFQKhwlkYjJVWgestAgEihqqqoTCAdtHULk0hGtSYtVxFJPzdfezVI
TXzO+Zz6nBdRL/dTVwmUe9BAqov4DlWCWl48nm2X46LCYLV1cS1agEMQl2GinqECgRASkRukEUXU
SqgIwpC0qQkkxFGAzjSECa1yP/QtZeO69WAcrFjFS3//bZgVazmgemjkESGKqiomokpE8Zy3WxnG
aYzTEEJbW0RQOAVyC+1syqEmHM2sgXE5VhpkKGjnKW1tcQrqmUUQkFhHySrStER1cD2r1m+FShUS
wdDq5WgXEKkSZQPUQRiDlNBKDXECUSCRuo2yGaEzhKoQygJQAsghspC3WkRhcY+NKoS4UpBYCHQR
DJmF0Axi2kGFMRtw8nlPhCji0L698GDj3snYe+N/FOBFwNHHwxUDAFjNeUkSghDkegIp2+BqQAo0
caIJtIAUKZsIxkmqhxhYmvLm31/DlT+AD7//X/jIX8I7/vdx1Bp7IDCF+zNvgcuBHJO30WmOtUW3
gDYO7TTWCCayNoKIA4dg5coAJWMa9YwojMhahasdJHk7RxASBwlGg3OCIAhxpsTB/S223w61Wooj
QBtVjEnPIYwDhHKMjzdo5xnVaoy10GjCwABkGjLjqNcc7ZZByQoP7Glzz705X/ryAxgHUSkgM0VT
+KwnPJFDzSZRuUSplKAwSJfTzjO0ccQBJApKwqJ0jRVLKtTHm2QTKav6JTQ0JSxpbZLlS3vQ7SbY
HGcszckW1kGcROQOtHWEUqLc1CAIFeNKCTqw4JoMLh8giUOkhh6RU9JtyiqFrE1oMiKTEWndMY2N
IbZ5xzSyOegaWXOEkUOGUgyhgEgWXe2ttsVKhROCUEXYHFAlTj7/YhhYRSvph6RCK3fkzlEqKbK2
pRJCbbRNbwiJy1Bpi4pIsY1JVNbENmv0hjAYQ58yDMYCoTUuM4g8J6s3ESkEDqx1REmIkaBKCS0N
qZHsvf9+cI7LXvYK4qWrmDCKtgtp55BPxSIGwMRIxvIlEAuN0i0SZympnL4ITF0T5E1U3qI1ktEX
ShIgtm16pKUiHTYDkxdDE0tRSNpqI6yhVCrRyh11AuoGykkZkhLnPOXpVFceRyOqULMBld6YrAgH
wbWK3rOqgFUDEa49QSU0RE5D3iBrprjMEjjoKUOAISSjvxJSisFmTfK0RVyKCWKJVRAlEiklpp3h
MkulHKM1BGGpqMmXL0eVSsggQdjibxtLUEJinWVwUDE62aY2OYKUGZVEYHSLZqOBsZbJWpsogFgB
JmNJXwmso503i4ETU2ZcOXt4qKOWhQDLZIALE6q9A5DmLOtfMl0lzTb+3vAfZfiYgKOHaUMuZm2b
TwAcHlYYBIE0WhMlxWQ+WWroqURYU0MqDTicbVPcdoMQdQSQlB0r14Rc+NRBvvSve/jU3x/gFa+S
LFu+jJ6e/RgzgcQgkgibNkBoVCkGFGmWIgRUkoRm3iYMExwJ7UbMnj3w7GctQbiUQCWoIKZZz6jE
Cq0VYRjiRMTEaJNqTx86bxKpMh/+8EHabXj5axOMSaj2hjSaNQJRIcsaWNcmKYWowGK0INUx2oRE
saDeqCNCR70Ny5dXOXQopzYh0G4F//Iv27jv3uLXWz1d1IKVa9cSlcqM1TWEAS5XqCBACkkSS8rW
0JwYISpJYgRBbYLV5RKBDGlNtgjyNgqJlBpqY1SEJJvMOH75MoYP5rRTiEqgrIK88GYYUbSkNDna
NSAdIdi0ipUrK4zpAyhXohLnWJcSBAprBMqFyOmuE2c7p136fA0GQsuq5YMcGFUYTaHGpEBqQTkQ
hEbg8hSFZs++nRDFnHvJUwnCMk4LjHBoa+ktBWSNnFgKykKSRJZYtBA2R+ctkjgkz3N6kgp13UTm
GVk9JcRQTkpI63BBhEVQqZZJXTHi0FmLCBTaOIJIopuW9uQkB3buhJXHs3nTyYw2c7LUEkVFgGSk
Cg+N0VAtBYzfs5s1S/soV0MmR4epBjHSBfQGAqkMTkA9zamUKqSNEVq1SaIggbiH/ko/42kxKiQI
oVYvblYcB7RaFhUGmLZgbKIBBs654GJUuQcrFAjB2FhGEkU0W47lAwLdsFCfZHR4hKFlvTRGdlPp
6aVajkBq0iwjTVNKKqFRnyAIi+4uGQb0RAlaCnI0tUabpFSlokAIhwGMs8ShxDY0eW0CtGX5pi3I
pApSHZ5nI1BF7IexmmYLpGgxtLyP+sQhmu0mUVIiChJyo1HKkWUtEgkqsDTbNdrWUq72kJoMiIBC
DEwPrJB2utKySGsYPXAAhGP5qpXsGx+Zq77zYuAowYuAo495W/td9guttQ0EGHKgzvQsnVJlQLNY
FwZHiEAhJFhaKFGjb7CPJUOC886H734D3v6/Xo/jKtq6RhKEpOkk0jQJ4wBjHY2pMcKlSgJYGmmO
lH3EahnW9fGDH93OyAisPq4f2E+rqZlQ0D84yMGDo1R7ilFekxPjLF02SL1eJ20ZRATtFvyfdz2Z
b3zzSi588rnUJibITRkhA8rlPlr5XuppThRASxucaRFFvTTTDENEKZH0xgH7hgWt5nL27Yn4zKe3
8Z3vFHYvpnCxO0KIY3oGBlBxGaEDohisTYoilRaTNbl7+w1s//m12LzJ0v4+GqONwv0tw//H3puH
2ZWd5b2/NezhnFNzlUrzPHdLaqnV3VJPdrvb3bYxEMfGAxAHHDNcQ+CSBEjAXJyQwENI7ATMZMM1
GAwEBxsbD8Ez7knuSVKrNc/zUFWq4Yx7WEP+WKfU7Xapbe4fQdxH3/OcZx+dXTpnrbX3Xutb3/d+
70vpodZfI3cFSkkajQbDw6NkJazfuoONt9/BWNsjVQAwWkNgISQ4AaXLmZk8DzOXMGWd//GR3+Hk
lMLqGj2Ro8jbWG+IdIK0OmArvMQL9/c6GuUYXrKQHQ+9kQVr72B82tJfU1jhsZ02aa2KxoMp8abF
0eMvQByzaM2tZEZjPbTzjCVLalw6U2eoWmEw0XSmx8lmJnj0yb/j1JFDYDMiJWi3mqRJBSVEuNfo
pobwZE5QRgkuHeSfvOOdVIbmg07QymMcGDSRhdgZrpw7DY02tz30EMYFpH9P7wBSg+10w9fOIfMW
Iz0xfangiU/9JVNjl/FFgRCKnp4+6vVprOsgI42SFZJKSpbXsWXJ4uGF9M1fxtJ7HqQn7sV0DEk1
IYoV1jkKC0rKa2HTE2fPAoKRZStoWI+LI5yHvoEYl0PiHa4jqBVT1KThzNQFPve5/4E2Bd46OqXD
RxFKJ3jvqdWqzExP0tdTJSsKpEoYWbaCBSs3sHLzbUAVEUHRDqDQKInxxgdGTOc4cewIFDm3bL4D
r6q4LhWnDEOD955IOFz9Co995q8QRQtbNIm1wjpJSYzUKVoohC0RJieOJPV2i77Reazfup0lG26j
5QXOB9CtJwBAr/F8YFHWcmz3bkgSlq9exd6D+7/dPHfTbgC76QTc+DYnBuBl56951V6CsSXWlEQ6
wbgCLWfJfRKUTxA+BgHalxhypGgS6Qojg0s4fw627oSo7xh9tV6m2jmJLlExqG6plZAKnXoECRaF
MQZTpuAWkNdHydvDfP5TzzE4AEuW9hLH4yBioniAssjpHdQ024ZYTFPtFVydvkSsI3qq89m37xL/
4j1Q2Dr/4b2O4f/2GD/8k7ew896NyN421bQNcgbDNAioDkkkVSYm6tSqA3Q6gta0x/tBLp6JEGY9
v/uBr/CFL4b8qxIEmoOug6RGR1m6diMTzRwqcahcIFQhKC2ReYv9T36BI5/+M2hMccTZkHwuLAgV
1IVsHsoCTABNHiMGH7N33nJ+9Nf/Cz3L19KyKUlSpSzAh4AAUjukK7l88gA0xiDPefaTnwBbASJm
ZkkTbBbAFM69eJH/nuhylGZMJ1y5eIUf+6XbKMuc0tXw0lCJNBqLRqCFo2yN4y+dhpXrEP3DGB+h
ZEz/gObiJcPIQB+i3aLIpok7M/yXX/55OHUYylao61NAkYWBjNKQ9FZdIh7hAgBUpjCykoEf+TGS
vpTcgfWevFOi0hhhoE8Kvv78bpCKjbfvwFiJilK8gnYJBo9wJRUNqTKc2fMMH/n1X4HLZ8ITkXVC
qKC04cL3JFBvhvGAECv3lgNGQNTPjn/9S9z9ujeHKhWjiOOY3HsKE3iNTGGxRYm9fBm5ag26f5iO
VXglKXNHZjyREKSRQuUz9NsGH/yP7+P8rkeDAlbRLUlR3fCF6z7KUoT2ZUVAmIoIdI3Kjvv5iV/4
91QH5jExk5NWK5TeoaUKFSwF1GLFoT3PgPOsueV2SlHDWjFb5BKcADw9yrLvq5/l+B//JrSmw3US
AdyLVeGmnF3ZTYHsreBsCYVhX7WPR/7vX2TDG95JW0Vd/EIXQ+ABYZEYivoMjF8Gb9hx7918+jOz
8hpzzmc37Qaxm07AjWMvTwe8fKd/vb//JnOCpyenpu5Scg1eaPKig04Ns0h8IXV3EnRAhPQlVhTg
PBNjOU/tgvf+e0grnra7wmC1n6vNMYZ6NNMdQxI7IhUjRIotqpQmwRQJpkj57Kf28Y0njjAxBk8+
CQ88BGnvDKVtEkUVdBTxxDcusmFjxOi8UcYnx7CJJ6pAJZIoF7Fm7RBxb06nWTDYD8cPwU+/5yC1
voO85gHYvBm27+xl/S1raHem6BQd5g3Pp9EqqM9oIEFHPTy/9yJPPX6eL37+BKcOg0EiozRQ9s6W
KKiI3nkLSHv78WVEngdHwdswF9aqgqiwTJ07AvXLLF2zgtFa74dF4aQM9efeKUHddvqO73/h7agI
rEf4Ct6UcOUCT3zhc7z9534BZ2OcISCzPSANQgm0Kzl5YC+UebiinQ5EUYhvO5CRRluLsxnmWknD
9cP+1z36CPBMPvE4ebsVUPlFhhCenv4q7XYG3lHBcensEehMs3r7HeSighMSrTW5hSQJiLZYeFJf
8KEPvh+O7gXtWL9tPcJldBoNIiWpJFU6nQ7HDx4CVOgTQByHZP7gAAP9fbRcwXS9SU//AFZAqkGU
UBWGI3ueBZ0ysnglQiWUxpEbCUqQVgUqF8Q+Y+bSKT7y/l+Fs8cAA6YTHLOsRKQJ3hRwtQhx/jI0
h5LAOuUjcPDU//xzdrzqIarV0RBh0hKpI1wehjHGM37hArRb3LL1YZqlx8QpgXRSYosS7T3Wl/is
zl9+5Lc4/3efD45PJSU1JQlQSEvHZuA8UV+Ncnry2tOuVBoqWxx0dj/DlbMnGa310ttTAyUpckth
HN5DJATCZJw5fAT6hxhdvIaGT0Bp9OwOXYTCXYWlc+k0tK5C0aKqFHmnDMScKgXrkUIifInGwPQ0
Boh6+smak3zlk3/J5td/PxBSWRBAjy6U0qC84cSBfQEwSbn7F//dL7xtjrnqpgNwA9pNJ+DGtG/a
3f99TCk4dvQ01u/AY9FahlyrVGH1maV8tYGVRQqJ8wJsytQVhTRgO700pyv4pEVUq1OpQImjv5KG
cK512Dwm8ss5f9zypx95lj/9E6jUYHQ+bN8O//Y1sH3nAIU/ibWWvoF+cldn6fKI9/9Gybq1Y/zQ
u7ZSlBexboyZek6ndZb58/tpZjnNdsGxk9DubiizBvyvT8ETX4XGrzXo6W2weQvMXwjzF0yhYoVx
ljPnxtn3Aly5HHCMacIz7/qRH77z9/7wLwKKSSQobzBYUBHrb9vOVKdA9fVTdQFUKKKAnpdANn2V
sWMHweTUz1/eem76yJy8vXowWmaa5d2ihJicnAgqVc6cOcdMntFEkLgg8mwkCOEQeLzJOfL8ntDJ
QhIRYYsChwYR48qu/gDd7agU3R3+/4djkoBSFEVB2jeAJSIvLYWDdtahlsQgDC88uwtsm42bt9J2
Ci8FdhbIaKDWC6bZ4crZ41z62t+CzXjLW777PZ/42B8b7NN1AABAAElEQVQ/9vJx+YF3vO2WybOn
Pj5Tb6BVuLN9ZiikYPnqNTSaLWx/jaQnpfAlKgolbMo4lGnC6WMwPEptaJQorRE5genCIpwHJQxZ
/Spf//wn4PgBdKrokeVt09MNO8tj5Zuda+3ZsX1b39FDR56cbtTxBnQMznqcy+HqOJHobsZdEDNy
IWCE8NCjPE/t3Q04Nmy6lWZhkDVNXkIlBu0j+irQns7IpsfZ/ZXPg2nx3W9+8y9/9q/+7JMZkEFw
PrpWTjZ4zcMPvHvXo4/+K5c7nM2JokHKRELRZqYxRbVok/T2dqttJNZ5lJCkCi6ePAkTV1i2/XZk
2k/bRERJHJieXQggFd6R5S2efmYXlAV37rjjD5556unfvNYImwHw0EOPjD7+ta991Vno60loZAVZ
uxEiX3qWHpxrREzKhZdXFoll967HQFp6BwcbjbHOXClLXvb+etHNm/Z/0G46Af8/MyXh+LFzlJnF
65xKovFOdmPggkD7C96bEBIXEcp7rLCMzJds3w6//zsNtm47x6sfWUdWHCWJLQ5D5hWdpiBSw0xe
8fzZR5/iTz4S0MRveyvc98AS1t+ymGazjtAzxLVx2rll3jCURR0VOaq1mHe/ayF/8idn+af/ZC9v
/C548MFBRhf0MDxcMDkziU762bfvPHkOsVKU1lIUkETw7ne/iRf2HeXLXznIsUPRk8/vKaPpmXFE
FNbItArLlo9cvf/uNcd27Tr6/05MTJbP7XthCcp+AaHACkoKpKqCk9x572vwUUIns8SJojThd1AO
l2e0Jq7A+fNoqb4xMz1zXeJ+0yzvxkI1llAE8qSi1WT7nTuwSuHQOBfmUi/Ae4cwJbbTYubUuS7h
UYyJq/giIAnTlRuQkWZhLSXW0HT+2i7s72tWSEoh6F28jrTSw1TLhzJSqciNp9rXj3KGyElOHjkA
xrBg4RJMN3TuRcAeJglMTzVZWE15bt+eAOsvOs/O5QAA+LJc2aw3SLvZkkoEhQsL09btd9EuAzeA
15rSOrSOMQWossC1p6ExCUs2E/f2Md1qUuoefCIoPdgsZ1FPRF+pOXloH0Rw56Y1v7PryUevy6j0
1NPP1BPYU9NyW2YcvgDhg0MsVi4nqVTIihKhK3hhKcoSLyIiAbpsc/LwPogVy9euJUtiZA0mL+Uk
KsFZuHJlisWDVZ4+sAcmLhFLx4Hndn3ula6Nd0VqckdVByc0L7spi1izaOki+ucNc6XVIpJRSCMo
iUIQlyXnjx+BomDt+lspnCL3kliBLz22tMSRRlhD0W7QPn8OlUQsW7Lk6DNPPf0t7fjSl784VlP6
WQl3NJp5cIBQUO2hWut9sb1dUCAExRC8QfmSi6eOgSlYt27TsefGLs7ZVW5GBW44u+kE/OO1OZcD
l8Mzu47SahYMz08oaRJJ8M4gpAUy0CC6u3+QXYrdSRavbfPbf7SOX/q5o7zz+/fyXz8wj7e8/U7y
4hRJxVFmCabdx1/++W7++wfa5Dm860fgDW9ci4yaeHGZ3F+m2jeAjhy6UjI4D6qJQEUlSjuSiiKq
tnnLW5dw3705v/fBcT7wK1P80L9o8OM/cxdJbYROprh44TzWgiHCCxvKxiLYsG2IT3z2IFvvWPcX
jz119D9d63g33drqwNWrE+zZPXHtVL1z8adEYvClgaSKy1zQHBhdzuCi5UyLCKEknawkiSOscyTa
QLvFqUMvgPEM9Q02x4oJ5rLFyxZXLoxfAAu2dMQochwIwZp1a2kXObK3DwKzLd56okhh8xbnT56G
Zg5JPxQRPqqy+J5tPPL2dzC8aTtex/RqT94pENEATqTXON5nj7Pqd7PHl54Lok0e7TJSmlgS6jJF
q0DwYxUYIVDO461BSpg4cxqGR5g3PMqEE5TCkGiN8tCeKVlSq1A2xjhz7AhkbRatWHb54olDc47N
3udf2OERlN32ZCXESgCKFRtuhf4hWsJQOk8UVyg7JVUZo33Job1Pgy9Zv+02SlTgdVABihEpcKUn
77QoswbN8UAotHzJwj27XuGh+f7ve+u6T3/i09sKE24YJcF5BWjW37qFwoGIYgrn8UKhlSA3oLxl
UDkaTz0KK5YyMDLMRSVoNaG3moANQFefa8qixfFD+8CX9Ffix0+dOpm/QpN4bvfTd0oZiK3CFfQh
J7VyBQsWLeRio05U7UM6iTEOlMRkHaTJOXX0IEjNxi23kztJFGvamaeiBNKHa6a95cThg9BqYvOc
I0eOPjpXO37gbT9w+yc+/ud3VEQIGpaOoI6UO1at2Yi1HhF7ihwqqcCWHiipVQStySs0Tp0Ebyia
jQ+95Gvn2u3fdABuILvpBNyY9nJ6ze+IVeuuu7aO7n16710zk3Dk4AlWq0vMH+khK6dIox6gRaCB
M+HrhAIU3hu86iDkFdasXs0v/vIminw///Znx/nYRz/P694QUqmTdfjMp2HsLHzP98Kb376K4QWG
rDiHiDJGRiGOJbGSxDoKYUTZCXz/0lGWgCjo60+YGMsZGJrP8PA4k+PwRx82lP5p3vmjr2Lewj6m
G4exEQifYUQQm3voDRojMo6dgHXr/G99p4M5NnF1yM9q29AJM1AS0bt8NS6tUliBjASVJArMf2WJ
sx2Ua3P8wD4gYsvGLbu+/ORX5/z+VetXvP7CpQvE3YCLxyLwUK0yMjpMK02oFzlaJGgNxlhs0Wag
ErFr/yHQPZAXMLyUN7z7x7j9gXsQQyNMVYepG8OM6xClKWUeaJbn0L65lv6fSxsHBxEpPS5UFpSz
Ko7ixdnZColUgrGLV6CVs3DjRgSKJAEvJJ3cgZBUKxG+zIgljF84BxLWrlh65HpOwIXL46MGhexS
SjsIwMD+eUT9QzRQgQTJO0zpiFQEBqpacub4QbAFq9esw8jAcoh05CZoMVTiBFW0mLxyEa5cBEry
vHP+le4F79Wywns8EofDOMKKpxRrb9mElQleaJwU5GWOSmKSCHRhuHz6KBQdli5fTiEVzpkgct2N
knQ6kCgBZYdTRw6Ac6xfu+74+J7nXvH+bDeNUrOYz+5dipD0DQ6C1N0qFIFzQea4NJZKHJGYJieP
7AfjGFiwmKYM8tezkH1XFhhr0SLj3PEjIKDSW3ti//79rbnaMTE+thm6aX26qiA21Bmu3nhr8JiA
OBahMiESKK8xnWmymUko22ileGHvnim+ddd/PWfgZjrgH9huOgE3ln07Uo2XU26+9DPOn937/nmj
sGi4n49+5M/50J/eT8ceRYoudVgXEU9XtQ8xWzZokFgUnrHWMbZsXcXHPrmZz3zyBT72R/Cxj3TV
/WJ48LXwyMOLGV0YU4qTiBiWLx5h3vAiGu0L6MgRKYsUDudDCNg6j+vmJ6315LYgKzNiJRmfCrLn
3/eWf8Zv/sbH2PvCV/m1Dz7Eqlt7uPd1k6xa3U/hDCtXrGPnHa/hl9/7ARYtEU/tP3Bs5tuM3zWb
mSgirk2y3ZC6ili9ZSsuruAQCAHWhJ2wlo4UT4WS88/vBmvZfWjvJ6930Q4dfP4hXFdymK54roDq
vH4Gh/ooJGBKRJSQd9uROE+PcRzZ8zyUGuYt4Qd+9r3cds+rKBLF6XqTOpJcxUROkHpBjLgm3utn
S8C6i73zILwHIb4JFuhFgIGApCNS8ArjZ7O73f9LmAgibzly9AgUnk3bd+KcCwyNUuLKAuFjKgmY
6TZ5p0799AmwOQtGRg7ONS5bt93es3fPgfuEiLDeI7rywsZrlm3aRtQ3SCklxgvwFmccSSIgM2hR
sO/556CSsP7WLVihMcIHimgX1I21EmjnOXb4QKhG8GbPX3/6b17RCThx5tytZnba0y50XkRQ7WPd
rdsoRITv6ke7zNEVX0bbgsP7ngPT4dZt27FRqJlX3iO9wLtw7WOtaU2M4U8dARwr16x+9vFXcALe
+ra3bvjkx//ntm9+qBXIiFWr1iK9IkJjrMAbR1yNyNolSgnIZ+DkURheRHV4EXWCToOlW4whBJF3
1BLBmWMHQRqWLF1w8djB6Tnb8vyBvbd7ukG1WZ0qAVQrrNy4ESsE3nviWNBqhNSQBmze4dKpE2By
0kQ/3mxft7vXcwZu2j+g3XQCbhy73k7/lT6/du6RBzf8P4/uOnzXT71nJc3xHr785Rdo1DPiWg2l
wzbYYrsVvi+KugR9dYMXjtLBQE3S9mdwuoe3ff9WXvsaxbnjjnarpH9Y4nSdOMqp9U/TPxKRpBKT
exqtMZQy4C2lmQ7haOuuSZRLGcDhUqZMT9WpVoa5Ou54YR/UO7DtrgdZ/viz9z3z9OHHf+LHv8Iv
vG8n//yHC57ff4qhkWUMD8znve/9AOOXoDnT/6Mw50T20olFACilhC3FnVoHHQK6NdRYy6pNWyiI
Are+A6zHWoOKBZGA5sQlGDsHUj4zOTVZzvWDABOXmzWpgiSzAJxIKIVk2dr1lDohLzwySvACWo0O
PXHCQK2Kn75EduYsiJSHf/BdbN5xPzNWMDOTodKBIO4D9FQiZEG3BNHhhUB4cQ096rslB0rrMARd
B2G2CCKkCUQ3taJCZVr4MyShzCvyULWWo/v3g6qw8fYdlD7kqH3sSbTG2RDpkL7k4tnT0JgBbzl6
9PCBucZl7YZb1+/dewCdxJRZhqcLUBQRa27fjouTEIUoPbHWOGPQPhDPNGcmaJ8+jl66hL7heUzJ
COcs1geNARz4rKAiBEf27QVfMjo6Mjl2ee6UzawdOnZ0bbg7RACRCBeosIdG6Bka4ZINTpQAdJwS
yPMMEZbj+18ABMs3bKbUFZTSeGsQLgIfqhG9sZw7dgCKFuA5dPzYs6/UnpmZxvbZS2UguOIyuHob
tt5O4SXGaxAK60Uoy0MgiozpS2ehaLHwvteSiRgnHHiP9SI4f0IQCYc2OY2Tx8Fa1q/dsO/YwcNz
tmV87Oqg7t4z1hHyGyKGxaup9g8zI2Q4EcACFB5i4eiNNIf3PgdYhgb7ppvt8Zcv9tdb9G86AzeA
3aQNvvHs20UAvuX8tlsWfODxxw6/8+f/Hfz4T97OI69fTqsDf/OJrxGrJTgSLEHVznahyd4TMAGu
Et57iKWgKB1FloCV1FtHiPtOcMvtM9zzICxfP8nq9YZlqwS9/QWmLMmzHCFaVCqWSFuUBIEF57pc
5JpI9BMzD2UHUK6f+lSOVr0c2j9FnEBUhQ9/9Pd/94XDh6dy23/b3l08/aaHv8EH37+bE/vhM395
iJ/68b9l7AJPN6cHNk9OTpd8ZxMMd++8/w4IDHnazYbOFciE0RWraXtHHGsoHZU4QvoY4RS2k3Pi
4F7wOaOjw9ddWXr7+hRe3+msxAhJGfdQRP2ge1lx+300VR9Nl2J1RBsgjbDeIRHYxgxMTMDKtex4
7XcxmZV0nCeKa9RiTT8w7KC/AFUvqClFEmkiJYmUJNaKJFLEOry8NXhrcKbElsU3vcqyxAqFFTJU
iMoQxpZAbCE1jmpZcObgYeibR//yddhIBR1E55FCIIWj6DSpJRFHDr4QYuCxZs+e3c25xmZyZmoD
OIzt1tjhQwpKR6y4dTONMg87bucChbHQiBJiYTl98hhkGRu2bKZlPVYGYR1jDEJArEEaR+w8J57f
D8Kz6Zb1R653nQCWLl2aNGemHojibqzkRTEKRpYsIXNQCoURAbwYxwKBA1MQCTh59Aj09FKdt5i2
SFFKIYyBMuAjvQVlDEeffxZUidaKZ/fsmXNsZu3oyRO3eC3IJOQCTKxDyCxWLN+0maaAjhA4BVJJ
TA6x0sTCcfLQHhCWW7bvpOGCaqaSHmTg+8daRJlz9fwpuHgOjMRk5ZyQie/5nu9bJkhvx0cIJN5H
4HvA97Buw11YXw2kT0LgylDFWhqwOFIpOb7veRCWlauWv9zDuF5K4CZG4Aaxm07AP3J71V0rf+34
scvf86M/VuWn//XDLF81w5bbBffeAx//i4zGVB/OpXRsjp1VdiNIyTqCKqD3IcRqCk+sqtTSKtU4
QicdatUWOr1EuzhMpXYV48/j/Bj9vYqB3gq+hLyVBTnhoDAcwqcKlApscd57nHHEukqnWaIE5HmH
rz92gVu2pDz0xtU8d+DpOwGmpmfKRpsffuD+u98/cSF5/PC+zqPjFyqPPvyqe95y7hT/fPLqdR2A
uZwBf/ni5e+OpCRAv7rkJiqBkQVUBoeCkJAkeEUWlFfERERITh0+CBpWr1l59Hrjv2XrnTuFjALC
jlmZPg8qYu1tt+F1ilBB26BjSiq9GmsdWbPF1KULUHbY+vAjlL29FD0xerhGA8P4TBtXgMxBNGEw
UiRlmzhrEHfq6PYMcadO1GmQZA2iTp1BaRmQds5jvwLlQrIipIMsQpQo70gsVIynvDoB587B8nW4
aj8iTVFRENmxpemy5lniSHBw3x7AsGzJkuvemyePH18HFm8yugWGwfMYnsfIkmXkzoR6dyTKBdld
X1o0lgP794J0bNy6lXZeBsyCjrHW4ky4jhUZ0RyfhPNnoSxYuWTJK+6677v3njvAhIUSMxtGAeFZ
tW49pfPISOEIID3pAWuIpaDTrGMuXyReuJQyqdFG4whkQ8J3IypAmkScObIfbM6K5UtfqTkAXL5w
fjRwJvMSRUgNy1bQOzyKQSFkFMZJQd6xREqSKMHB558DBQtXr6dUKTiL8kVIbXXxA7GUnDlyuKv7
4fjbL3zu8lztSJJ09ez7SIZUR8gxSTbetg0nNEIFlU3ngjAUMjhwM1cn4MIF8Iaz5878yUu+9uWV
ADd3/jeg3UwH3Jj2cmDgnOfvvvOu+bufffrtb3lHzPt+9fuo9OyhY67gYs0PvmuQn//pKZ5+bIJ7
31CjGvVTeACD9zlgEbKFn40NI1AyRsmIq9MTRLEgTQP7YKteMjhYw5isqzhmaLfrOJPiygo4RdH2
KF28WDvkAS/wvsCT45zEFCmtVka1Jjh59iwHjsLb3rGIgdElfO4rJ+588OEdK7/6padOAnzxy7v+
EPjDbn/9yZNPzvb9W0L+1zrwzecFwMT4hREpcnyovA8Tt40YWXcLMkmRcURZGrRQFPksDS3EMuLi
6ZPgcqanL//V9S7UlTPHX191BSUW7zWlzcMMuXg+CxeN0nQltSiiXoYwrrUEx8jA7mefASW4Zedd
XJWepstInMT2KKKeoD3vcwvK4rI6sjWJMh1saXAEchekCEPuHbl1uO7O/UXAoEAiyHWVeOEarNR4
EQLPEMRgtEtIrOHikSMwPc26bXfQlgmllCG/DDgvkN4TaUmzPsXUsaOA51X33c3Hjs2ZDeDihdOL
waE8KOkonATv6V22hLSvB6HAWEs1UtBd2DEGqUqOHj4AAlasXkOWVCmcQCqH1jqAGgtIhOLgvn3g
HInS/PVnvviKCLwLp07cpQBTBrCqh5AOkIotW7aACv0VXRyFsR7pPZVYcfbMKchL1t6yCRf3UcoI
4wzCB8Eh3x0o6Szt86fBlDz04AMcP378uu150xvfuPhvP/e5u+Nwy1F6iTdAJFm7ZVtIQ/iUqoR2
HqpjvPdIoNOuc/rIIRgapH/+QnysMaaBEBGiq+4YKU3k4fjB/aA8laGUzkR9zracvnBiiyXwKZSi
DLgZXUBNsGL9MnxksdLhjQ9ASA8yApNbjuzfH5S9hN196vSpNtcHBTLHZzcdg39gu+kE/OM0DzB+
dbKBgrVrF1OpZMS0iHSTpcv6yOs9LF44xQf/+zPseGgHRoyhZCCocUKivEN4dy0vbLvOQKfVoT4D
tRpEKiJJYqK4RV6EhLf1oCNNJHq4Og3jV6ZJq7B4SX8QFvHgncS7wBeP9EgMQjgcJSjoNCT7nrd0
2nDXjiXEPT0sWASXxw/8G+An4Vt2EHO9F8w9eXyT49RoNh6AWdCeoCQCoVm4Yg0+SlFRhbzVphJV
w8IpoehYiqLJ1LkLUJacPDYnCBGA8+fPLPEukNNZMVt1IRhatgyRJDTKDFmtIvKQV2/XM/qjmFQl
7N77PPSP0D9vFFdLqSUVJusNtEiRGtrtNqO1Cmpqgic+80m+8ce/C3kzbFO7IECk5BoNoY5eHJKX
npcSoh5+5jNfxwuN8BqJRHqD8A4vLYKSc8ePgYc1t24hUwmF85QmpxYnREpjixDxmRi7ApOTEGvu
e/Wr+Ngf/eG3jMvDjzwy+qUvfnGnViIIBjkQCLzQ9C9Yjo1rqDjCZYY0UeRtcDHgO0S2CRfPgkxI
h5fiq/20ilBeGMVpcAI6IG3O0YMHAUnf4AjjYxevyw8AcPL06RUA3vqgPSAIZSdRhSVrNzCj4pA2
UiHc7UpP5ENp/pkzZ0CnLFm1njSJaDswVqFlSK8UBdi8pGOm4GoQznnVq1/Dhz78rWMza4O9vYtm
waTIGK8U+EAZvGb9FhqtEtkTEytotcJlTLXGm4L69BRMTjF0y20M9Q9w1YMXgY5YqaCG6LyhzDqc
P7Qf8hYbN21m98TYnG3Z/8KeTUqG+z+3hEkhjWF4hP55w7QFIdXkBVpqTAlJBWSZB80IDCrR1nZL
L5l7ob+54N+AdjMdcGPaXIvgt9jxk8fbXvDU44+domxXKfJQjJWInEWjFX7onQvZvQc++9ndSLkE
j8P6Jq404BRCxCAiRMAGIkVBmqacOgZHD3sQwzSNIAdazpL5Ck4O0CkrXJ2OmJqq8Vd/DYOjPbTs
DE6EHahSvSjVT1kKigK8T/EiJpMlLeNw5WKeeQxefQ/0puP0VyfYtA5OHmjW5uj7K00mL99xfNPx
nnvuuUUqjYoUJWBVBS8S0Ckb79yB8RGNekaqK1gBZRRElnVsuXz6BJy7QJr2PZbns5j+b7VMcmch
oSPAaLq88DFrtt7BtJd0Ik0WQ6kFykFPlCJkwcXx87ROXmLhrTtIVYQqDT6z1GSNfl9BZhClFZzJ
OfTYV/nGR38Pps5D8wrkV6GYhHwKOlch677Pp6A98eLnnenwqo8RLexHJiUuVginUGWEyTRCaXzF
0BYzPPX0YxDFzF+2BqMUximiOCGzDoejVkkR1nDh7IXQeevYvWcf69etr2xcv66yfdvtPb29vfJV
9z8wmES9X9WiirddTvpuWBuZsHbbq5lxFfLCkCgNRUjNZxHYuEN59SRcOgVb7qEVz2d6KqeqwThF
KwvRGmkztMy5fOUsJCm+Z/AVH6g3v+lNK85fmXhIJxEAzkgQFbApw9vvxw8top4ZKrXAJFzkIU0R
aY0zGbv3PQ9Wc8fdr8ZOz1CzEMUxHZXQkuBiy2CvY8/Tj0LUD9QYm5qzEu+a7d239w1CaTpIiigJ
DkB1EGSFrfc9iO4dopEZfFfG1zuoJeBNh2PHjkApWHPrNrQtqQJWV2h7iY5AiQLvLSLLmX7+GaKy
wxtf8+Cc7Xjd616/oGxmd8subMMLQFXB1xjZuA2jehEyAeeIhMV5FypO6k3mpxEHdj0GruD2TRv2
cf1n8qZTcIPazUjAjW+vtOj5FatHru56aoKndp3mta9fTVl0iGJNnJZs27mAzbdf4kO/X3L/gz2M
zqshmEEE+cCwFQqF2wjhMQaUirEl7NkP69avJEnBmAZFWdJpG/AxY5cn0L6PilrGvj0XcL6bKySI
mhRlmyiqkKQah8eUntIKplthk9Qe6+XIfviX/waGBj3WF8QyRGZf0jfm6O/Lj9cDUXpA5Hn+2tKa
buRbktsy8MT29TCycDFxnJC6gF0wzuGExLmciiw5ePQg4Fk6b/TSsfrcIdTFy5ZWLlw+d+3f1kCg
lktYsnwNQqXEKiXLPcJ4tJVoAVoWXJo4D96xfPXqALpzHlV6EquoijDpd5SgaDQZP3capiYIeexZ
5kcI+QLZHQVJ8Obsi6MgbNgSItiwdg24MuTcjSKVUIgI5zoIWeJFm8bkFUg0lVqVrAsfEA5SKRG2
ZLoxw1AaURvog95emG7w4Q//ARTtZ0LJgQIveXLPIUyrA0hE2ofNWsgoCvLNcZWFS9fhSRGiBGvx
pSLRkFFSiyxXTu0Hl7F4wya8rpJEAl+GjWlRhtK9wYqiqM+gUwXOMjE2AX3zPpxgylgJl0TKtjqd
VMdJEcdx+cm/+ezrRK2XPMtQcQ2PChCF5et49RvezExmqQ30Um9BLQ0Bl0hBbC3t6THKk0dh+XJ0
tUIlhpbNaefJrCQHAkPWuMpQX0+AzZPyi7/yqwwOLvpt08nTvt5as+ULnZV54opcDvYPTO85ePR1
Qmq8UHjrocvhX7vvXjoetJREtZipeojM5S2QzlBVgsMHDwEJ9z/wejr1JrK/gohCioLSowUgFQeP
HQMVg5W8/zd/m+HRhb/Zzsp0YHCoHkVJeXVyYvDrj3/j/oDEMAHTklZDWEZXufuBR7BSI6KUMmuT
VCrkSHynpCIlRf0qXDgDzlBNqx+/zjz18mf55XbTEfgHtJtOwI1n11vcXv43HuDAoYl/OdDLyXe/
++/4X194mFs2b2emvo+Z1iV871V+8ueG+KF3TvJbH3ic975vKXHi0fgQmvVh4hZCoyQYbynKXsos
5YMfOM/H/2wXA4OwaJGgf7APhKM+3aA1A2dPjpPVTxBVoDWtWbIyoTVjSXSMpY11ZQBLKYm3Cu8H
mRnP6Ek28jt/8BQL5sPWbSvJiyaddpVEhZ0O3zppXM8JeLm9ND0gAH+6G/6FsHsU3mKEQy9ezPDw
MG1rUV7gnUBYG7TXXU5NZBx57lGwGcsWzf/SsRNz53WXr1zxvZcunCPqRuNLwDsNaR8blq9DljoQ
z7QMqdAkDiKXk+iM4/t2g2myafN6hHAo74idwFtH5KFwHi08aZqyYNUqWL0KznSB1+IlAbyXOgEQ
VA1VIAMiSSDLoNrL0IqVyNKT2IzE1YgkOGEpbYa0Jc3pSahPMbTmVvr7KhgRhOai0pMIMNaQDAxg
bIvl69ex8g1v4NQXPwWTl0NcOIqCsqKTGGOgVg0LZEhyB19TV2DREhYtWowRkt6kgikFph3GT8mc
HgVPPvU0eMftm25F2ZJKFNMxAcxfrYBttojSGB8Jdt57D589tg/On4CyvCd3hhxLQ+tQUplnof4x
7sHbEPmynhBbX7yEh//p27n9zvvIKn3UDYgy4EYj6Ugoie0M7asX4eIpFjz0WnwMMhIhJWMgTsIO
WRvLgpFhomUrYMUquHSGzvQUHSEewFgaV6cDKBIBTnLlSh10b8DkSAm1Hqj0smTnfbztR3+CvtER
pk0JSlHmObmvIbQlqmiyyQaXXjgAMmVo3mJczxCX8xxVSRBGgBVIGdFu5zz5wgGIa5SuQ2kM7emZ
h1AVOhfHwj3jARz0DYErw3jpFKr9vOVn38vO176WSw1Ls91GVnppdjNekY7Q1nDh7NkwFlrz9a8/
fmKOOeomHuAGt5tOwI1jL1/8v9MQuL/n/m0f+ruv7fnxH/zBL/Erv7qJpctrdMppZOIZXjif179h
kj/6A/iZf6WgLwCMwHe/yCO8xjqQccLl8QLDCGNj55mZhkqFZ77+NY91M3dK0U07W+jrCSV3G7eA
lJrGdI5wCWkSY0RJJyu7qWpHnjuajRLNCp56/DRf+gr8x/80n2oPNLM6UbSQJOkC1vycfYe5J4yX
j9k3OQLT09MDEOrkvfeBxc8b1m/cjFcxRVFgifGlQWhFJCCRDtmc5NKh58HmPLN337eSrHftxNFj
23W3Vdd+2An08Ai9fYM0ykAalFiNirvkPa4kEgX79j0FumTB6iW0tcb4LnujE3g8zhtM4dB9FW65
7z76R/rpTF1Bdnf6oZOzzoC41mmdpDjn6GQZSZRSWoPWmo3b7qAjYoRQIYftwAjXFfcrOX3yKHSa
3HHXdhwWh0drEXbvziGI6BiYnmmzZuEi3vqu9zD26leTTY0RS09jeoZKrZ/MWGRaIS8KnC2JtcDZ
nN5KhU69hUsG6J03n8sdQyksiAQVSZQGcCgp2bt3L9RqrFi1nNyVKBnjdde3UZDZkkYuqCZV7n7d
d9Ez2M/JQy9gmg2kKynLAiklUioKa3A+lLYVrYKhkRFKb0j7+9h6504Wr1pP08R0jKBtLFGqaGdQ
jR2maNDjO1w6sR9MizWbb6EJeCGwOgIfIyTYQuJ8zJWJOvMXr+IXfuO3+MbXvsDFMydC6WMcU6nU
aNRbRCpGOo8pcnp6emi32wGj09PD4nXrWXvbNgaWrOBKvUUhU6SWDA3VmJ7ukCYaYzNE3oGLV2B0
KdMtw7yFiqKTI3LwxqClQmmBrqUsXLueyjt+iCi7ijYleE+cVGnnFikVWms6jQbVSgSuRMURwwsW
sWnHvYjBBZybySiTfmSaUljIbNDWUARGwrMnj4FwiEg/67PvKHV3c/G/weymE3Bj2eyi9tLj7OfX
fX3+83v+85vecnfn0a/u+pl3vWs//9d7Rvju772f6ckz4IZ47lkYGoRYjRLLCaRo453DO0cIZDpK
7/DW0yoKstLjNay7ddMDT35j/7Ua+fvv2rT/md37URW453XwH953N1peYXTUkHU0ifLkWQdnFXGk
EDojy2GmDtOTHYzp4Xd/bx/3PwR33D9C2xxHxh4lm+TWIDV3UXx7p6f7/hUrJ7TWwhizE7rKazZM
egjJ+m130vYRVsUgIwoTVOCccUTeMXXhDFy9hNZ6V73RuC7YbPzSlXlxN+XtIIRdpWbByjXkQlHq
iLIr/icAo0LzHAZ/8QwMpqiRHnKhaTuJkhFIj1ZhJ1eagvHM0DMwzPAd96BzGxD0/sVIgH9JFEAI
gekqzZXWhLr1SOOcoy4lpRRYFeMJQDahoVKJMZ0mhw4dAiFZu2kTk506WV+FJFIgBK4Q6FjhYkgG
RhlvgxBDLNr0AL5o48uCOE2wKEovsUqRmxItHXEkMUUba3L6+1IKo5iwEhOldMhAQFwJRDnOw0yr
STE2TrJkKbXRISa1wBiHjCVGhXy9qA5QVCSmKMnwLNn+ECvueA2+LImUwDlHaS1xnIIUdHKDwgf8
gRI0TYeOM/gk5YJM8KqCTDVlBkRQ4IkiB3mLak3x5GNfBuFYvGETjbiP0iWgY5wgCBl5EFLj9BAX
Gh0WLtvM1u8a4dUDVTp5G0cIkkSVXqzxCOuIpcaXRQDlWotBkNR60JWEs1eboPtBxXRantRALa5Q
uAbWtjDT4zAzw/ztr6I6OMrlKYNOKyAhEhFKBEyD17DtVQ8S3budWixJCOV9eemRKiZKKjgHOEOi
oN2qMzw8yNmLV5AjI/hKDzNNT6EE1oTMUl8VtAGsoSINJw7sBW8YHRmauFKfut7zer2F/9tF927a
/wG76QTceDaXI/DSl+t+7l56/lOf2PXBR15/71e+/ndP/NJ//c8TOz760S9w171w8gSMX4G7d0KS
JN0SKx92/likjlBeYVxEbiIuXynJ8gpFCVen2tlso+67956tT3/jSZavgV//b5vYeW+EMKeRfpp2
p6QSCbTyZK0CIVMQCY1mRqMJRZEg1UI++odP0ingh39sCJlO4PIc4SNK02T5KonzjhXLl6Snz5xv
z9Hv72TCuOY47dy5c+MTTzwRIgBCgCDQ08qUhStvpe1SUFEQFnQEKl1jkc4HfgBrWbZ85fmTJ47N
+UPValXm7exO6YIT5SShJk8rVty2iaby2Dg4GBBSHUJBohT1sQlo1qG/HysBIpzXxEJQWoEhVBlG
KqZtCq7mEKsKqZDBCRASJ0IduxPMegIIoF3kpGlCUu0uBDL4JnkJTtpABBMixsRKk0hwWcmFA8fB
Rwz29HMVgdJBPlgo6CBIBMy0QtRfRgA9TGU5rtAolSCNphSSwgqcU0RJBaWg7WwIH0WWq606lbSH
ViNnaKSKdRUK5zECXAFVJTh55DgUnoHB+UQ6QWqNtQFwmucBDlGtSgxQWInNMyIVBUJsERPrGB0r
2u0C5yFWMWXsSWLBdCsnUhrf14+T0C4sxliEVdgZ6OkjYAKqoRwykVC261zc8yzEmv7BIUhSTB7u
MtnNCuhZXIACRYXzMwZVHWZKSK7mJT3DA2TGYm2EExBHkmoC9UlBT6VKFIV+XWxkxA58tYc0DVoE
cSxoNQ39fRpNyUiq+fRXvwjGsGHTFkRaY6bRJBnoQXpItQQZsBN5WdLXV6EoIpCC8foMg4ODdDJD
6YPAUOlDqiyrN1gwbxGHJqYZWriC6dzSbngyJxiaD5cuQ08UFoyyWTJSFfiZSc488yTYnI2rV3/o
yskTL5+nvtNo5k37B7Sb1QE3pl3voXFzHK89bF/82ycO5Rn/7K677vne9nT62N98nKeP7odmG7be
lYKcwrtmmFQ9SOURwlJaQ7PlOXG0RSRW8elPP4OzPHPkyMnG7HdfGb/0JiL4nT/4ATZtlzh1lP/d
3p0GTXbV9x3/nnOXvt39bLNppBEjoQ0kGBnJEgiQMFhhiSuppFy2UyZOJUWK2A5OkaRsyhVXylVO
eYGKHZMY7IpZDEWMHQIRiEUBgQBpJI00QiNphhkhzUiaRdI8yzxLr3c9Jy9O90xP093P84y2Z9T/
T1U/t7ufXu7t7nvP75x77rnliSWmpjOUzl3nMpOhQ/BCS72VMDurqNc38fzcND+89yhf/yb80q/A
1otCYrOA9iI8fwbt+1x3/bUoDW94w2VXr2H5B21k6Jly/PjxX/N9l3GLonADsOgAtr8Gb+oC8mCC
1EJi3aixrRzoHDr3VOfY7ot2XvqdYfNyw8/eeKuC0+PwF+BK7mrEJT/zRholRc03ZBVoeq4VoAD8
Ak4cOAT1NjTbpEtNgramknuEudt9bXJXKEYGJryQUHd6jmuvc1EorU5PlXd6ID7KVTc8cVa4gBCn
0E46iVF55J12DQ2UjMJv5PgLTXj8GBRllo6cZItfplJobKfQVVqRF7CpCl4GSR20AYVmamaKmS1V
UqPRQUCp6hNGyh1qlkKrnWKth/LLhFMXosIqk6UKqgWqCV6iKAMVDeXc4+Aedy6FopmRr8SEGUTW
w8+hrCwTPhRxQbvWJk8zpmaqTG6K8CsRJizTMopUQ+aFJFbTNpBYd4SLikqYwKPehJUV93lEYUgY
KCarrh9lVEA5g4mkoBrn3PO1b8JyHdKc5NQpIpMSmZQgz4gsBJmbd5VD3Oo00ng+hfZpWw+/Ok2C
T5IrokhT0po0NrRbEAQVdOAOfVxqGUpTEbmGxFoWazFpHjMxA5NTPjatMWmbPHvgIR751u1QKnHJ
Va9nKSvwJqoU1pKlKRSFG8ynBJVqQJZb4sKjFkMwuYl6ZmnkFhP62BLEFlIN0xdNMtfI0dEES82E
UtmjVFJs2wrPHzNMR7jPvgGVoo2uL3DP178Mc8eIZqr84M7vPDpivR3WGiABYAOQELCxjGpOGxUA
TO/te+6979BiPf5gbviXb7r20q/gwXveuwtoYG1B94RsAHmRUq+3mJ9rUCRbeeD+E/zgu4b3vPfm
L/XO2KbNE43CwsmTh9myOUSrNmkeE7dyypFHnrraB3jEhcf8qZxacyvoa3nsQMDHPma4/nr4hX/0
K/jedrTdQRJvg/w1xK0trCyH+D4opSt9y2OGLOvIDc3Ro0d3dk+ta22npPZ8pne8Bj8oE/id2nkB
pdAVaiXlTtKzNHsSrOW540cfG/ZFnXjm2M+7L8i6z1K5GhgTFbZdfBH4iqRoo0MwNsYP3L+VSTjx
xOOuxDh1inR5CT9LqSpQMYS6MxqbNQQGysodcGBy11x+euF7wkdnsEPqLVdTz3NoNg1eAOVOn71S
qbNP3RQo3Dj3njFkjRrZ4il33H+acOiRxwhtik4aFHHTnVgocEc+1pcLNk+54+aTJCWIAppJwcmF
GF0KaCauUcIYFz6MgSgqEwYhcVLQTg31pnG7XtqdQl27DogqySlbwzMHD4GBlYVF2stLeEmLknb9
T/w8gyxF5wVbpspEQUgcw+JiRl64+WqnBUnqslIQ+oSh+60XhZu3ZhtKPmyeAp1DHrtfTJ6661sn
QDWbRFkbs7LMt77wBfeFt5ucOn6coB1TtQWVIicyEFmIPBfaqmWo1QqiCrTjFO0pglJAu50xUQ5p
13ICDVMV7WrtJde6kRZQijTt1IUI31dMT0dE5YCFuRU0ruk9rC9y+998ChZmYcsmNu/YQVHyyLUL
fKXQx9OKNLNYLOUyxK1lyp6iGnnkmcWi3KGNsQtp5ar7XS3XoBT5hGWfqFSiVkvxDLSWYeuEJipA
Ny2VrMHO6ZCVY4e459P/Hfyct1+36zdGbKt619f+7ZzYACQEbBC2ewL4nrsGXEYFgIGF4Y9+dHTn
698IV12zGe1ZTOF6BIeh2/jMLcDzc9BoFCwvhXz2U3NMVNl7xx33fqt3Zp46/OzHAwvf+MqD1E55
pM0qlWAzWewRN6rMLyhOLXo8+7zh6ImMVnIBcXIFf/LRu/mjP3yWhTmoVK7ktq8c4NtfX+F730p4
9EH40YMpd9w2x5f+1wHiGB7ce+DeYcsyajl7L77v4/v+W4xxhxuUy2W3EMZw041vhizGJgVVDVMB
qDZMKgjiGuUi4dl9D4M1PH3kyfqw9zh24tgOOifIzS2ulLSwfdcbqQQaG7eYKWnKhWFSFQR5jO+n
QIuf/PghsG0wLb7w139BsjxLREE5AM8rsLqF0U33mCxzY+Qr2zk50dkX2zMNIler9EIoVXTnDI6d
kJCDKWImqxZtEnzaKNVk80zID773jc6O3pTdD/6Ahx/6IdOVgoqXoLK2O3NgEVOuKuptUL5Bl31i
U5D7Cl2NyJTrVJ4VZ85i19nzRJYV+J4HnsUP3BDSFb+gRExgW5AmREFMbf44+fIs6Izs+aPc9uUv
UAkzVL6CLtqUlCIwHqH2SVuGQGl8C+UwAOP2WVdLbtwLVbjgYBM3HLFvwFpDOSzwTYFqZZRNRkW5
g+M8v6AU5uRJm8jUWXj6EH/8H38LFp8DEggU3/jbL5KfWmaTF5AtLzPhwWQE9eWMqOw+66ji0U4g
iiLy1L1/VQfYNlR9jc5M5/wIYAsX8MJOINWF63CnjSGLC0Kg4vvYNMZPWnzx43/G3N49YHIuvOwS
oplJEg2JSTEYkqSNpw2+Zwh0Rlo7xZTOmTZQiqGsNRqFp6ESdsJl6oJn5IbTpIjdfZNhiJ+Dn2X4
sWUSqKQ1rpjyePK+O/nE7/wmlGH75sr/u+s7d9653nW0bxsnXkHSJ2DjGRYGevsC0He9e7tLA+Yt
b77+gkcf2feWm98eUY5miErbaNQXMF5CEEYURYOFBWi0YaI6zVOHaxw9Au97381fOnH7vWfNxMLC
YvaGK6N7vnVb/I5/8+spN751F0nrBJ5vaTUNS8sWowrKle006zMs17bwZ39+Hz/8IezcufWONG5M
fO1rh99xeo47FWesqzEqDW9987Wf2b1nf8rqG47u8nYHPDzrc7vxxhsv3rNnz+l5b7fb7jCscsSO
bZu4ZFOVUyYnjlcgcwVJpDUzJXj6Rw9Bc5mpmYm7aqfaQ78kA2/2UFSiCq24QZEXUCpz2bZtXBCG
qNTSWJwnDCpUitx11vMtXnOB2lOH3KlvleHU3d/lC82QD3zoI1S3bkGHiiAyKKWIcg3Wp2J9Ck9h
TbeDwdkdA5Vdy9SgKLBpgU1zokBDkRM3l0gWT0Beg1KJ9OQRvvq5T5KpNm+6/ucIPFiZP8W0H+AF
AzYXVmGU3zNP3alxEcm6wx9zDaF1NeCpzFAqLBQpRltS7eHbgla6DEcOQtGGaoWjX/17vv+ai3jv
P/lVCh1hC5d2rNKupFEag8Z2+jl0Keu6X3YGiaabkwtt0coSGPCwWGspsCTKneTYw0KrxSN3fZc7
/+rjbqClLHb7cJIGHNzH5z/2B3z4tz/CdZddzvGTzxCVq2wPArSKSIr8rI9G4Vqh3EjaBt/rnD8B
3TkctjP/xp3bMyz5ZFlGnsdoa/GsYTIK2P/wI3zyL/4rPL0P4iZUNvG6XW8g8wytNAMFvu9RKkfk
aYJSlonIQzVbRFbhN1YIjSYNCwplsMp1YjBKg1UopdC4Uz17ndFEbVK4litlscai6xk6rvOVL32J
3Z/5BAQZUyXD7PHZD3GmIjKsBWDUejyoAiReRhICNhBrrVVKqf676W45hhf6/YEAQF944eRlBzx4
Yn/M7LEJzPZJPH0hxsTUmwlpbpja0sKuQK2mWZz3MAUcO157gAEJ/Yln8t/cVuHHv/Pv9vGpz9/C
xIwhN0vEbbC+m4G5RZ+Dj0zxl5+8j58cgZ975y2/+v3v7X6k+3q+76sg8F3N0N22jWazyLK82L1n
/2o1ie7n0bvsvZ+NBlhcXPwgQBAE7oQzxuCHAXlzhX13f4cjJ06x0CrIydC+orDuTGiq2ab1/HEo
Eq64ZOfRfafmB44UeOmll1aPHX+e3FgacYwPlKMyjXbC7IFDfP1//jXLmaaVWCqVKqEpyEzGStJg
yrbx5p6liiFp5xQBLO/+Nn/++EGufcsN2IqPLftorYlSD3JF4Xko32BN0hkQ6OwfR38v0sFThbI+
Cg9PFYShTzNNUWmTo/vugWIFlXlu6NmDD/LN//QI37/0TVx+xTWUKhMElRLtrI5V3TFluzPQzWGd
IxRs58Q7ypy5jiHTPm2/hLIwmRpKRQEqp1CGQvkoDMmpWUiWCU0LW6uTeRH3fe6vOPjdO3n9ruvZ
vGXm9DIbRU/hf/aRtd0Q4EIIaOsGgso7NeGoUK6gU5BjaWsolGH22ed46sAB4oOPQ5EQkhCQuj4l
HhReneV7b+dPj+zlhrffzPS2bfgTU/iTE8wuLlOuTpwOQwrQhWu98QxYnZORYJX7mSqr6SYX2xn3
IU1yJiYraGtQRUFreZl9e/awcOI5WJyFounSsh9wyeuvpjAGPwjQ2p2Uqh273Q2RX/DcTw5y+KG7
mVYepbSKLQz4LVAZSrl1z+3HOvO9dUOmKnKsLSj5AZ5W1Go1FhdO8eijj5I/8ySQcNXOHf/nyYOP
/27f+tkfBEatz2KDUBLCNpaeEKD6LnqVizfgPjVR5e/ymJsuvAg+9OEZ3vq2HVx99U7SZIXZuePE
mev9lcQ7+PbXMz7+pwfZ/pqdP3vs+PGB1eBbrr/4owcPPftPP/hvt/D+f3UZif0JRVHHCyJMsYmH
H8j4/Y8skGdwwc4rbjh8+EiDn07//c2Ba9lo9P9Qez+Xs6aTk5Ofrtfr7+52DMzz/MyjwwnIy27M
+JJy7Z/WuB3KqXUbxmSJW952w/t237/nmUGfwVtvufm39u7d92GsokgTSsqdidHgkXtlsKXOsKte
pwt56nqOlQNIlpnKGmzxYTGHGFDhFuLUgjKuxAg6nTZSv9P9H1f4q84peXtL+LVSGmzQKaQ6p8hT
HkQa4kU3hkEGnu+TB24gHO1vwRYhNkvd43XilqN/gKJuNdx2/vxUXU+54xH9wD2nyOgMQOBudwc/
MhnKJkyQY4EEyJQPugKVKTdkHqanzNdnfgnd91Odz6cz8hSnt2+qs8tGd/aRdB6rcCd+0LiOBO2E
wPfuve6q1z3x+P6HPhACKW4XRwFUJ6ZYajRcwV0uQZa6Tqded3jkzqECZ/2STefzTl3nk+65nG3n
PXsXwvb83A1QFARRmbzVoOppml6IndzBv/+b/43dcQVpaRIsxK2cKPDReUyZJrd9/i956oufdoeI
ZCU3D6oNKuOn6wu9n586Mw8Wd+iALbrHwBJMTj5w07VX/d7uu+9+msE1/2LI9UEBwf1ipBB6RUlL
wAbT0xowaLfAkLUXGHzcvGo0ef/73vnO9+zd+8N//fu/t3xTFC3z2ksPcvU1cPllFzGzZZqwavFU
xF13PUVuefDY8eOtvvc9/dq79z37u9dctqny2c+ces/UtoB3vvtycmaJ7DRPHDJ89I+edNvAsHrN
4cNHip7lGLQfsD8AnEsI6F12DZjXvva1zywtLf3fOI6jKIoSz/NytFJGGW2M1nnm+doPjYqUbSde
Oc9a3mS50iDxUEbZSnlre8/eh54Z9nmnaVaa3rz5257nFb4iryqbUeS+xrNKR2axlVUq01sarXZS
AYsutCXQlokqacMLL6Ccl8j9SPv5Spr7Opxolien2o1mbaIAL/MJLJ4KTJhpYwxkaGOMZ6dGff+r
UFjPd+eDT1sqx/pZUApK1TDJWoQaqyrhVK3VbFZz06xUS5V2kFTTdlxEJprKgijMbJ6q0/sYAKu0
q4dbrHanozw9bFH38EVllRuOWWmVejq0yiilUuuWh6LTJK7dc6xRJiHyCs9XVmVp7tug0qIykzWS
YsIWFdX7lVhl1dlL2CmGLaZb+Cs3nnHn16Gx1iqMQRlrlbZWecriKfA0r915ydONhcW/PfDo/qW9
+x8C+JP3vesdNx154vH31+r1icV6XFpp1IhKURqnSWDTWE1u3tyoN+oT2AyCkDN51ENjrY/KPWyh
rLF+EBXaYpQCpbS1SimUwnhKozwya/yZLZtX6s3apMkL3ZydfaearJA1GqAMzSLHEsAFO5jadjH1
wqLiDKNca4D1IG3lbAlyak8ddrsOVIEqqYdt2nI9Q08zZ0Jb99PLc/BDlPasLXJFmlsV+Pbi7TtO
bt++/aTCfPahB/ac3H3384OC+3o68p75DiUAvOKkJWAD6msN6E5/qsbbdxnYEtAzVeVy2bv1XTf+
0r6H7/nFUwvc5HW2msZz4b/I4OZbbv0Pd99z11mdAgeZrvBEruEDvzHBrmsv5vnnlvjy389x/Cm4
9V03/+FXv3Hv5xld8A+6rNap6KyPachnMmjaffygoCTEi21gIB9wvf83efb1Uvg58vTNGI3yNTbP
IZhi8z/8F/z6f/5jkky5UxrrMsaHTMGUgpmlY/zB+/8xLD3Ltmn/uvn5uaTndfvXRUZc779v0Pra
W9gPqvkPawGQVoANQkLABjVit0BvAOi93h8C+h/Xf+GCC7aFP/PGq183MWXeWqBX9tz3+Nfm5+ez
UbPVvTJRrXpTm5ufn5/nJl+5Q7C05YH3vvtte26/4/7/0XnYsIK//77VWgJ6X2vQZ9K/nMNCwFnL
sAbDVg4JE2I1wwr9/unA/1UqFT9ptR7zO83zRmmycgmo8Jbf/ihve+8vU1Ie1ivRUiGZD/M1uHwr
VJ95gv/yi7fimdrDha3/Wud1hwXy9U7PpRVgYLiXALAxyO6ADWrEbgE4s4L1dxbsXcl6e80PCgLM
zc0n352b3w/sX+Nsnd6wNZpN02jyz3ftumZq25YduxYW5g7s//H+ldvvuL/7nv3z0397PS0Bva/Z
nY+zlqXv/u51O+Bxowrwc90oSSh4den/rZ2rtRT+/Y+3gLrhuute9+B994G1BEDb4jonlCtcds0u
bBSB8THWP1393roN2vWU2cd/DNYwXa02Fxv17vKsFsgHPW7Q/9YSBIbtBhjWqideQRICNrARQaC/
R/ywfcXdANAfBBgwXY/Tzzlw4NAyHLqn7z37p+u5mAHP7X297vv31vpN3/2Dgs+5LOuL1RIgIeGV
9XIWOv3f9bBa/7AgC8DJ2bl/lgIeqtMpMQC9CSYv4uLLr6QReCzXMiYnfYzvzgVBmjHpN9n7xGOg
DBdfecXRxUdOrra+scr1/umwlrthAWBgy560AmwcEgI2uBcQBPoDwHprxf3W8tgXGgBWq6V056N3
WXrv6y34X+jy9i9T11pfQwr+jemlKHyGfderBYBBg7UpwM7Oz22xuEMYfd+HQkOhmLj0SrAZmoLp
mTKFhVYLwsDgmSYqXeHAY3tB5UzPVG9jbS1ujLjNkMcMCwKDplL738AkBJwH+sYP6F2ZegNA74Zo
tQAwqPYxbENmR/xv2OO70xdS8A9qAeidn975Glbwv5ItARICNqZXMgQM+012A8Hp32+9Xv8H3VNg
a905rNGDW99+I1OepbE8jxdtxRQeQdZm0itRDsAurdB+6jCYLN+z+/sHOFM5WOsROGsNAaPCwKig
Ia0AG4yEgPNLbwHY1Q0A3TCw1gDwQkNAf+jov77Wjcx6Q0D3vbvvbxi+fOey62O9Gygp7EW/Qf1U
+i+96+hZQX56etprQ7I6RQAABbdJREFUNBpukCIgyzLQJcjaXHnxNqZ1ShJAWaedQZAsJl3B1pc5
uv9hqM2DTyNP8/6CeLVm+tVa4VYL8Kv26ZEAsPFICDhP9O0WGLZ7YFATeXeDM6xpcq1GhYa1hIBB
9w26v/81hhnVuvFCQsBq79tLAoAYZNDvblgAoP8x11577dX3338/AJ7nURQFyhomt05imosc27+P
hvXwKIP18MOAuF1jMrIc3/8QkHPVJRfPP3m4NiwErHVgrmEhgBHPkwBwnpEQcB5ZQxDo6q8d9xaY
DJiuxagmz2EhoDs9l4K/f9l6WyR6l39UCGDAdD2Gfb5S+ItRVtsN0B8Aeh+rZ2dnf7l78qtSqUSr
1UIpS23+OT7x3z5KnqSgAyg652wIQzCZG1Y4jyGPeffP3/z8k4cP9Rf0g3rxD6rFs8p0rev26edJ
ANi4JAScZ1YJAsNqx6u1ApxLodb/nNVaA4bdHjUd9NqDDAo5wwr/Ubs9XggJBq8Og34HL2T9GNQK
MGz3mgKYnZ29IAxDjDForSmVSiilCKsR9eYKeIE7v3M5gHYCpgCTowJNyQ+oKI+rLr+szk8X9msZ
wGe1FrlRhf3A50kA2NhksKDzVN+JhkYVgMP+B+vfuK32+FFBYND1UdP1zMtqNf+Xu4CWQLCxvZgb
vVHf9aj+AN3p0BE+Gbz+DjKqZr7asfyrNeUz5Ppa1mkJAOcBaQk4T404YqB7u7/pnAHT/utrNeg5
ozYa6yn4z3Wj0b+LoPs6o3abvFQkBGxsr3QIGLQ7gL7/vRghYFQrwKAAYPpeZ9h7DLtPCv/zkLQE
vAoMaBVYy7T/8ef89gzeqL6ggn/YRmTAqZaHBZphTa6jnOvKIIX+q0vv7+CFfLfDQsBaWgHWOrjX
sJr5qAF9VhvNby275YauvxIAzi8SAl4lhgSBtV5f99sNuX+tTYj9189pw7FKIBh0W4iXy7A+AYNC
QP8ugpdqd0B/EDjXADDwPin8z08SAl5lXsKCcT3Pe1lrDAOW+ax/vxjvIcQ6DarBD+oT0BsIBgWF
Qa/Vr7/gHtbUv9qIfsMCwLD7pOB/FZAQ8Co2pHB8MZr/h9kwtYVVgoEQL4e1tAYMqv2v9zwfa9kl
sFrhv1oIkAL/VUpCwJh4CQrF1ToHnrlTfmRizAw5eqc/FAzrAzBsN8B6Q8CoToL9hf5ZnQFlnR0f
EgLEmqw3RMhGRIiz1ptBIWBY0/+LHQJg9fEALMh6O44kBAghxEuoLwh0p6Nq/esJAF2jgkD/7YHN
/xIAxpOEACGEeImNCAK914f976yX6rs9rBf/qOZ+CQDiNAkBQgjxMhgSBLrTUTX/te6KG3VY7qCO
fxIAhIQAIYR4uaxzYK/+62uxWhA46zESAISEACGEEGJMDRq/WgghhBBjQEKAEEIIMaYkBAghhBBj
SkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAgh
hBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYk
BAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEII
MaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKA
EEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBj
SkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAgh
hBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMaYkBAghhBBjSkKAEEIIMab+
P3+s0t7cOIclAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://mahout.apache.org/images/mantle-community.png

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
AAAAAElFTkSuQmCC

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://mahout.apache.org/images/mantle-asf.png

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

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://mahout.apache.org/images/download.png

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

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://mahout.apache.org/images/global.css

html {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
body {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
div {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
span {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
applet {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
object {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
iframe {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
h1 {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
h2 {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
h2 {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
h4 {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
h5 {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
h6 {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
p {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
blockquote {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
pre {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
a {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
abbr {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
acronym {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
address {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
big {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
cite {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
code {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
del {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
dfn {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
em {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
font {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
img {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
ins {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
kbd {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
q {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
s {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
samp {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
small {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
strike {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
strong {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
sub {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
sup {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
tt {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
var {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
b {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
u {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
i {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
center {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
dl {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
dt {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
dd {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
ol {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
ul {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
li {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
fieldset {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
form {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
label {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
legend {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
table {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
caption {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
tbody {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
tfoot {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
thead {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
tr {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
th {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
td {
	margin: 0px; padding: 0px; outline: 0px; border: 0px currentColor; =
vertical-align: baseline;
}
blockquote {
	quotes: none;
}
q {
	quotes: none;
}
a {
	font-style: normal; font-weight: normal; text-decoration: none;
}
address {
	font-style: normal; font-weight: normal; text-decoration: none;
}
body {
	font-style: normal; font-weight: normal; text-decoration: none;
}
caption {
	font-style: normal; font-weight: normal; text-decoration: none;
}
cite {
	font-style: normal; font-weight: normal; text-decoration: none;
}
code {
	font-style: normal; font-weight: normal; text-decoration: none;
}
dfn {
	font-style: normal; font-weight: normal; text-decoration: none;
}
em {
	font-style: normal; font-weight: normal; text-decoration: none;
}
strong {
	font-style: normal; font-weight: normal; text-decoration: none;
}
th {
	font-style: normal; font-weight: normal; text-decoration: none;
}
var {
	font-style: normal; font-weight: normal; text-decoration: none;
}
a img {
	border: currentColor;
}
ol {
	list-style: none;
}
ul {
	list-style: none;
}
table {
	border-collapse: collapse; border-spacing: 0;
}
* {
	margin: 0px; padding: 0px;
}
html {
	height: 100%;
}
body {
	height: 100%;
}
#wrap {
	height: 100%;
}
body > #wrap {
	height: auto; min-height: 100%;
}
body {
	background: url("../images/bg.png") repeat-x left top rgb(166, 166, =
166); font: 13px/1.7em Opensans , "Helvetica Neue", Helvetica, Arial, =
"Lucida Grande", sans-serif; margin: 0px; padding: 0px; text-align: =
center; color: rgb(85, 85, 85); font-size-adjust: none; font-stretch: =
normal;
}
.clearfix::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.clearfix {
	display: inline-block;
}
html[xmlns] .clearfix {
	display: block;
}
* html .clearfix {
	height: 1%;
}
.clearfix {
	display: block;
}
.clearLeft {
	clear: left;
}
a {
	color: rgb(48, 76, 144); text-decoration: none;
}
a:active {
	color: rgb(48, 76, 144); text-decoration: none;
}
a:link {
	color: rgb(48, 76, 144); text-decoration: none;
}
a:visited {
	text-decoration: none;
}
a:hover {
	color: rgb(48, 76, 144);
}
h1 {
	color: rgb(85, 85, 85); line-height: 130%; font-family: Opensans , =
"Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; =
font-weight: 300;
}
h2 {
	color: rgb(85, 85, 85); line-height: 130%; font-family: Opensans , =
"Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; =
font-weight: 300;
}
h2 {
	color: rgb(85, 85, 85); line-height: 130%; font-family: Opensans , =
"Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; =
font-weight: 300;
}
h1 {
	margin: 0px; padding: 20px 10px 5px; color: rgb(137, 95, 48); =
font-size: 200%;
}
h2 {
	margin: 0px; padding: 20px 10px 5px; font-size: 1.5em; font-weight: =
normal;
}
p {
	margin: 0px; padding: 10px;
}
dl {
	margin: 0px; padding: 10px;
}
ul {
	margin: 10px; padding: 0px 0px 0px 10px;
}
ul {
	list-style: none;
}
ol {
	margin: 10px 30px; padding: 0px;
}
dt {
	color: rgb(177, 63, 26); font-weight: bold;
}
dd {
	padding-left: 25px;
}
img {
	border: currentColor;
}
p img {
	background: rgb(250, 250, 250); margin: 0px 10px 0px 0px; padding: 5px; =
border: 1px solid rgb(220, 220, 220);
}
img.float-right {
	margin: 5px 0px 10px 10px;
}
img.float-left {
	margin: 5px 10px 10px 0px;
}
code {
	background: rgb(236, 248, 254); font: 1em/1.5em "Lucida Console", =
"courier new", monospace; margin: 5px 0px; padding: 15px; border: 1px =
solid rgb(236, 248, 254); text-align: left; overflow: auto; display: =
block; font-size-adjust: none; font-stretch: normal;
}
acronym {
	border-bottom-color: rgb(137, 95, 48); border-bottom-width: 1px; =
border-bottom-style: dotted; cursor: help;
}
blockquote {
	background: no-repeat 10px 10px rgb(236, 248, 254); margin: 15px 10px; =
padding: 10px 10px 10px 35px; border: 1px solid rgb(236, 248, 254); =
color: rgb(151, 105, 87); line-height: 1.5em; font-family: sans-serif; =
font-size: 1.5em; font-style: italic; font-weight: normal;
}
table {
	margin: 15px 10px; border-collapse: collapse;
}
th {
	background: repeat-x 0px -100px rgb(209, 75, 31); height: 38px; =
text-align: left; color: rgb(255, 255, 255); padding-right: 12px; =
padding-left: 12px; border-bottom-color: rgb(255, 255, 255); =
border-left-color: rgb(209, 75, 31); border-bottom-width: 2px; =
border-left-width: 1px; border-bottom-style: solid; border-left-style: =
solid;
}
tr {
	height: 34px;
}
td {
	padding-right: 11px; padding-left: 11px;
}
input {
	padding: 4px; color: rgb(85, 85, 85); font-family: Opensans , =
"Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; =
font-size: 1em; font-weight: 300;
}
select {
	padding: 4px; color: rgb(85, 85, 85); font-family: Opensans , =
"Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; =
font-size: 1em; font-weight: 300;
}
input[type=3D'search'] {
	width: 220px;
}
#sidebar-wrap {
	background: url("../images/sidebar.png") repeat-y left top rgb(255, =
255, 255); padding: 0px 0px 0px 15px;
}
#sidebar ul.sidemenu {
	margin: 0px 5px 8px 0px; padding: 5px 0px 0px; text-align: left; =
text-decoration: none;
}
#sidebar ul.sidemenu li {
	background: repeat-x left bottom; list-style: none; margin: 0px; =
padding: 4px 10px;
}
* html body #sidebar ul.sidemenu li {
	height: 1%;
}
#sidebar ul.sidemenu li a {
	background: rgb(255, 255, 255); border: currentColor; color: rgb(85, =
85, 85); font-family: Opensans , "Helvetica Neue", Helvetica, Arial, =
"Lucida Grande", sans-serif; font-size: 1em; font-weight: 300; =
text-decoration: none;
}
textarea {
	padding: 4px; width: 400px; height: 100px; color: rgb(85, 85, 85); =
font-family: Opensans , "Helvetica Neue", Helvetica, Arial, "Lucida =
Grande", sans-serif; font-size: 1em; font-weight: 300; display: block;
}
input {
	background: rgb(255, 255, 255); border-width: 1px; border-style: solid; =
border-color: rgb(212, 212, 212) rgb(235, 235, 235) rgb(235, 235, 235) =
rgb(212, 212, 212);
}
textarea {
	background: rgb(255, 255, 255); border-width: 1px; border-style: solid; =
border-color: rgb(212, 212, 212) rgb(235, 235, 235) rgb(235, 235, 235) =
rgb(212, 212, 212);
}
select {
	background: rgb(255, 255, 255); border-width: 1px; border-style: solid; =
border-color: rgb(212, 212, 212) rgb(235, 235, 235) rgb(235, 235, 235) =
rgb(212, 212, 212);
}
input.button {
	background: rgb(230, 230, 230); border-width: 1px; border-style: solid; =
border-color: rgb(235, 235, 235) rgb(212, 212, 212) rgb(212, 212, 212) =
rgb(235, 235, 235); margin: 0px; padding: 2px 3px; height: 30px; color: =
rgb(85, 85, 85); font-family: Opensans , "Helvetica Neue", Helvetica, =
Arial, "Lucida Grande", sans-serif; font-size: 13px; font-weight: 500;
}
.float-left {
	float: left;
}
.float-right {
	float: right;
}
.align-left {
	text-align: left;
}
.align-right {
	text-align: right;
}
.clearer {
	clear: both;
}
#wrap {
	background: url("../images/wrapper.jpg") no-repeat top rgb(255, 255, =
255); margin: 0px auto; width: 1400px; text-align: left;
}
#content-wrap {
	margin: 0px auto; width: 1400px; padding-bottom: 42px;
}
#content {
	padding: 30px 0px 25px; width: 500px; float: left;
}
#footer {
	background: no-repeat bottom rgb(226, 226, 226); margin: -50px auto =
0px; padding: 20px 0px; width: 1400px; height: 50px; clear: both; =
font-size: 12px; border-top-color: rgb(238, 238, 238); border-top-width: =
1px; border-top-style: solid; position: relative;
}
#foot {
	left: 30px; top: 5px; text-align: left; position: relative;
}
#header {
	margin: 0px auto; padding: 0px; width: 945px; height: 100px; position: =
relative;
}
#header #logo {
	left: 20px; top: 5px; width: 405px; height: 42px; position: absolute;
}
#header #logo a {
	border: currentColor;
}
img {
	border: currentColor;
}
#header #controls {
	background: no-repeat right top; top: 60px; height: 42px; text-align: =
right; right: 32px; color: rgb(27, 120, 215); padding-right: 20px; =
font-size: 13px; position: absolute;
}
#header #controls a {
	top: -2px; position: relative;
}
#header #language {
	top: 10px; height: 42px; text-align: right; right: 32px; color: =
rgb(121, 124, 126); position: absolute;
}
#search {
	background: url("../images/search.gif") no-repeat left rgb(68, 68, 68); =
padding: 4px 5px 5px 33px; top: 0px; width: 360px; right: 0px; position: =
absolute;
}
.hintText {
	display: none;
}
.fieldWithHint {
	color: rgb(0, 31, 47);
}
#nav {
	margin: 0px; padding: 0px 5px; top: 84px; height: 34px; right: 0px; =
clear: both; position: absolute; z-index: 99999; background-color: =
rgb(68, 68, 68);
}
#nav ul {
	list-style: none; margin: 0px; padding: 0px; height: 34px; float: left; =
display: inline;
}
#nav ul li {
	margin: 0px; padding: 0px; display: inline;
}
#nav ul li a {
	margin: 0px; padding: 6px 15px 0px; height: 28px; color: rgb(255, 255, =
255); font-size: 14px; font-weight: 300; text-decoration: none; =
border-right-color: rgb(136, 136, 136); border-right-width: 1px; =
border-right-style: inset; float: left;
}
#nav ul li a.last {
	border: currentColor;
}
#nav ul li a:hover {
	color: rgb(17, 17, 17); background-image: =
url("../images/header_hot.jpg");
}
#nav ul li a:active {
	color: rgb(17, 17, 17); background-image: =
url("../images/header_hot.jpg");
}
#nav ul li#current a {
	color: rgb(51, 51, 51); background-image: =
url("../images/header_hot.jpg");
}
#main {
	margin: 0px 0px 0px 20px; padding: 0px; width: 960px; float: left; =
display: inline;
}
#main h1 {
	color: rgb(51, 51, 51); text-transform: none; padding-bottom: 3px; =
font-family: Opensans , "Helvetica Neue", Helvetica, Arial, "Lucida =
Grande", sans-serif; font-size: 2em; font-weight: 300; margin-top: 15px; =
border-bottom-color: rgb(235, 235, 235); border-bottom-width: 1px; =
border-bottom-style: solid;
}
#main h1 a {
	border: currentColor; color: rgb(51, 51, 51); text-decoration: none;
}
#main ul li {
	list-style-image: url("../images/bullet.gif");
}
#col1 {
	margin: 20px 0px 0px 20px; padding: 0px; width: 260px; float: left; =
display: inline;
}
#col2 {
	margin: 20px 0px 0px 20px; padding: 0px; width: 260px; float: left; =
display: inline;
}
#col1 h1 {
	color: rgb(85, 85, 85); text-transform: none; padding-bottom: 3px; =
font-family: Opensans , "Helvetica Neue", Helvetica, Arial, "Lucida =
Grande", sans-serif; font-size: 2em; font-weight: 300; margin-top: 15px; =
border-bottom-color: rgb(235, 235, 235); border-bottom-width: 1px; =
border-bottom-style: solid;
}
#col2 h1 {
	color: rgb(85, 85, 85); text-transform: none; padding-bottom: 3px; =
font-family: Opensans , "Helvetica Neue", Helvetica, Arial, "Lucida =
Grande", sans-serif; font-size: 2em; font-weight: 300; margin-top: 15px; =
border-bottom-color: rgb(235, 235, 235); border-bottom-width: 1px; =
border-bottom-style: solid;
}
#main #col1 h1 {
	color: rgb(48, 76, 112); text-transform: none; padding-bottom: 3px; =
font-size: 30px; border-bottom-color: rgb(235, 235, 235); =
border-bottom-width: 1px; border-bottom-style: solid;
}
#main #col2 h1 {
	color: rgb(48, 76, 112); text-transform: none; padding-bottom: 3px; =
font-size: 30px; border-bottom-color: rgb(235, 235, 235); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.feature {
	margin: 0px; padding: 0px; height: 435px;
}
.screen {
	background: rgb(255, 255, 255); margin: 10px 0px 5px; padding: 0px; =
border: 1px solid rgb(238, 238, 238); width: 255px; height: 200px; =
overflow: hidden;
}
#main .hero {
	background: rgb(255, 255, 255); margin: 10px 0px 5px; padding: 0px; =
border: 1px solid rgb(238, 238, 238); width: 555px;
}
#main .highlights {
	background: rgb(223, 233, 239); margin: 0px 10px; padding: 15px; =
border: 1px solid rgb(238, 238, 238); width: 400px; float: right; =
display: inline;
}
#main .highlights ul li {
	list-style-image: url("../images/highlight-bullet.gif");
}
#main .highlights h4 {
	padding: 5px 5px 0px; font-size: 13px;
}
#sidebar {
	margin: 15px 20px 0px 0px; padding: 0px; width: 380px; float: right; =
display: inline;
}
#sidebar h2 {
	padding: 15px 5px 0px 10px; color: rgb(51, 51, 51); font-family: =
Opensans , "Helvetica Neue", Helvetica, Arial, "Lucida Grande", =
sans-serif; font-size: 1.5em; font-weight: 300; margin-top: 10px;
}
#sidebar ul.sidemenu {
	background: repeat-x left top; margin: 0px 5px 8px 0px; padding: 5px =
0px 0px; text-align: left; text-decoration: none;
}
#sidebar ul.sidemenu li {
	background: repeat-x left bottom; list-style: none; margin: 0px; =
padding: 4px 10px;
}
* html body #sidebar ul.sidemenu li {
	height: 1%;
}
#sidebar ul.sidemenu li a {
	border: currentColor; color: rgb(48, 76, 144); font-size: 14px; =
font-weight: 300; text-decoration: none; background-image: none; =
background-color: transparent;
}
#sidebar ul.sidemenu li a span {
	color: rgb(152, 152, 152); font-family: serif; font-size: 0.8em; =
font-style: italic; font-weight: normal;
}
#sidebar ul.sidemenu li a:hover {
	color: rgb(85, 85, 85);
}
#sidebar ul.sidemenu ul {
	margin: 0px 0px 0px 5px; padding: 0px;
}
#sidebar ul.sidemenu ul li {
=09
}
#sidebar .indentfirst {
	margin-left: 0px;
}
#sidebar .indentsecond {
	margin-left: 20px;
}
.postmeta {
	background: rgb(236, 248, 254); margin: 20px 10px 15px; padding: 5px; =
border: 1px solid rgb(236, 248, 254); color: rgb(119, 119, 119); =
font-size: 1em;
}
.postmeta .date {
	margin: 0px 10px 0px 5px;
}
.postmeta a.comments {
	margin: 0px 10px 0px 5px;
}
.postmeta a.readmore {
	margin: 0px 10px 0px 5px;
}
.post-info {
	color: rgb(186, 186, 186); padding-top: 3px; font-size: 0.95em; =
margin-left: 5px;
}
p.thumbs {
	padding: 12px 0px 0px 10px;
}
.thumbs img {
	margin: 5px; padding: 4px; border: 1px solid rgb(235, 235, 235); =
position: relative;
}
.thumbs img:hover {
	border: 1px solid rgb(197, 197, 197);
}
.thumbs a:hover {
	border: currentColor; background-color: transparent;
}
body#home #wrap {
	background: url("../images/home-wrapper-v2.png") no-repeat top rgb(255, =
255, 255); margin: 0px auto; width: 1400px; text-align: left; position: =
relative;
}
body#home #header {
	margin: 0px auto; padding: 0px; width: 1400px; height: 403px; position: =
relative;
}
body#home #header #slides {
	left: 10px; top: 128px; width: 1363px; height: 260px; position: =
absolute;
}
body#home #header #slides .slideshow {
	margin: 0px; padding: 0px; width: 1363px; height: 260px;
}
body#home #header #slides .callout {
	left: 30px; top: 35px; color: rgb(43, 31, 72); line-height: 30px; =
font-size: 30px; position: absolute;
}
body#home #header #slides .description {
	left: 30px; top: 190px; width: 640px; color: rgb(224, 224, 224); =
line-height: 1.2em; font-size: 14px; position: absolute;
}
body#home #header #slides .controls {
	left: 900px; top: 15px; width: 100px; height: 30px; position: absolute;
}
body#home #header #slides .controls a {
	padding: 5px; border: currentColor; height: 30px; line-height: 24px; =
text-indent: -9999px; position: absolute;
}
body#home #header #slides .controls a.previous {
	background: url("../images/backward.gif") no-repeat top; left: 0px; =
width: 16px; height: 30px;
}
body#home #header #slides .controls a.next {
	background: url("../images/forward.gif") no-repeat top; left: 60px; =
width: 16px; height: 30px;
}
body#home #header #slides .controls a.stop {
	background: url("../images/pause.gif") no-repeat top; left: 30px; =
width: 16px; height: 30px;
}
body#home #header #slides .controls a.start {
	background: url("../images/start.gif") no-repeat top; left: 30px; =
width: 16px; height: 30px;
}
body#home #header #slides .controls a img {
	border: currentColor; cursor: pointer;
}
body#home #header #slides .mantle {
	left: 585px; top: 58px; position: absolute;
}
body#home #col1 {
	margin: 5px 0px 0px; padding: 0px; width: 260px; float: left; display: =
inline;
}
body#home #col2 {
	margin: 5px 0px 0px 20px; padding: 0px; width: 260px; float: left; =
display: inline;
}
.downloadNow {
	margin: 30px 0px 10px 20px;
}
.downloadLinks span.docs {
	margin: 0px; float: left; display: inline;
}
.downloadLinks span.previousVersions {
	margin: 0px 20px 0px 0px; float: right; display: inline;
}
body#full #wrap {
	background: no-repeat top rgb(255, 255, 255); margin: 0px auto; width: =
1400px; text-align: left; position: relative;
}

------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://mahout.apache.org/images/prototype.js

/*  Prototype JavaScript framework, version 1.6.0.3=0A=
 *  (c) 2005-2008 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.0.3',=0A=
=0A=
  Browser: {=0A=
    IE:     !!(window.attachEvent &&=0A=
      navigator.userAgent.indexOf('Opera') =3D=3D=3D -1),=0A=
    Opera:  navigator.userAgent.indexOf('Opera') > -1,=0A=
    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,=0A=
    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 &&=0A=
      navigator.userAgent.indexOf('KHTML') =3D=3D=3D -1,=0A=
    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)=0A=
  },=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    SelectorsAPI: !!document.querySelector,=0A=
    ElementExtensions: !!window.HTMLElement,=0A=
    SpecificElementExtensions:=0A=
      document.createElement('div')['__proto__'] &&=0A=
      document.createElement('div')['__proto__'] !=3D=3D=0A=
        document.createElement('form')['__proto__']=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) { return x }=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
var Class =3D {=0A=
  create: function() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      var subclass =3D function() { };=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
=0A=
    return klass;=0A=
  }=0A=
};=0A=
=0A=
Class.Methods =3D {=0A=
  addMethods: function(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({ toString: true }).length)=0A=
      properties.push("toString", "valueOf");=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value;=0A=
        value =3D (function(m) {=0A=
          return function() { return ancestor[m].apply(this, arguments) =
};=0A=
        })(property).wrap(method);=0A=
=0A=
        value.valueOf =3D method.valueOf.bind(method);=0A=
        value.toString =3D method.toString.bind(method);=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
};=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
Object.extend =3D function(destination, source) {=0A=
  for (var property in source)=0A=
    destination[property] =3D source[property];=0A=
  return destination;=0A=
};=0A=
=0A=
Object.extend(Object, {=0A=
  inspect: function(object) {=0A=
    try {=0A=
      if (Object.isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  },=0A=
=0A=
  toJSON: function(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown': return;=0A=
      case 'boolean': return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (Object.isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D Object.toJSON(object[property]);=0A=
      if (!Object.isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  },=0A=
=0A=
  toQueryString: function(object) {=0A=
    return $H(object).toQueryString();=0A=
  },=0A=
=0A=
  toHTML: function(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  },=0A=
=0A=
  keys: function(object) {=0A=
    var keys =3D [];=0A=
    for (var property in object)=0A=
      keys.push(property);=0A=
    return keys;=0A=
  },=0A=
=0A=
  values: function(object) {=0A=
    var values =3D [];=0A=
    for (var property in object)=0A=
      values.push(object[property]);=0A=
    return values;=0A=
  },=0A=
=0A=
  clone: function(object) {=0A=
    return Object.extend({ }, object);=0A=
  },=0A=
=0A=
  isElement: function(object) {=0A=
    return !!(object && object.nodeType =3D=3D 1);=0A=
  },=0A=
=0A=
  isArray: function(object) {=0A=
    return object !=3D null && typeof object =3D=3D "object" &&=0A=
      'splice' in object && 'join' in object;=0A=
  },=0A=
=0A=
  isHash: function(object) {=0A=
    return object instanceof Hash;=0A=
  },=0A=
=0A=
  isFunction: function(object) {=0A=
    return typeof object =3D=3D "function";=0A=
  },=0A=
=0A=
  isString: function(object) {=0A=
    return typeof object =3D=3D "string";=0A=
  },=0A=
=0A=
  isNumber: function(object) {=0A=
    return typeof object =3D=3D "number";=0A=
  },=0A=
=0A=
  isUndefined: function(object) {=0A=
    return typeof object =3D=3D "undefined";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Function.prototype, {=0A=
  argumentNames: function() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\(([^\)]*)\)/)[1]=0A=
      .replace(/\s+/g, '').split(',');=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  },=0A=
=0A=
  bind: function() {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function() {=0A=
      return __method.apply(object, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  bindAsEventListener: function() {=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function(event) {=0A=
      return __method.apply(object, [event || =
window.event].concat(args));=0A=
    }=0A=
  },=0A=
=0A=
  curry: function() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D $A(arguments);=0A=
    return function() {=0A=
      return __method.apply(this, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  delay: function() {=0A=
    var __method =3D this, args =3D $A(arguments), timeout =3D =
args.shift() * 1000;=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  },=0A=
=0A=
  defer: function() {=0A=
    var args =3D [0.01].concat($A(arguments));=0A=
    return this.delay.apply(this, args);=0A=
  },=0A=
=0A=
  wrap: function(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      return wrapper.apply(this, =
[__method.bind(this)].concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  methodize: function() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      return __method.apply(null, [this].concat($A(arguments)));=0A=
    };=0A=
  }=0A=
});=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
      } finally {=0A=
        this.currentlyExecuting =3D false;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, {=0A=
  gsub: function(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D arguments.callee.prepareReplacement(replacement);=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  },=0A=
=0A=
  sub: function(pattern, replacement, count) {=0A=
    replacement =3D this.gsub.prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  },=0A=
=0A=
  scan: function(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  },=0A=
=0A=
  truncate: function(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  },=0A=
=0A=
  strip: function() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  },=0A=
=0A=
  stripTags: function() {=0A=
    return this.replace(/<\/?[^>]+>/gi, '');=0A=
  },=0A=
=0A=
  stripScripts: function() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  },=0A=
=0A=
  extractScripts: function() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  },=0A=
=0A=
  evalScripts: function() {=0A=
    return this.extractScripts().map(function(script) { return =
eval(script) });=0A=
  },=0A=
=0A=
  escapeHTML: function() {=0A=
    var self =3D arguments.callee;=0A=
    self.text.data =3D this;=0A=
    return self.div.innerHTML;=0A=
  },=0A=
=0A=
  unescapeHTML: function() {=0A=
    var div =3D new Element('div');=0A=
    div.innerHTML =3D this.stripTags();=0A=
    return div.childNodes[0] ? (div.childNodes.length > 1 ?=0A=
      $A(div.childNodes).inject('', function(memo, node) { return =
memo+node.nodeValue }) :=0A=
      div.childNodes[0].nodeValue) : '';=0A=
  },=0A=
=0A=
  toQueryParams: function(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.split('');=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  },=0A=
=0A=
  times: function(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  },=0A=
=0A=
  camelize: function() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  },=0A=
=0A=
  capitalize: function() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  },=0A=
=0A=
  underscore: function() {=0A=
    return this.gsub(/::/, =
'/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{=
1}_#{2}').gsub(/-/,'_').toLowerCase();=0A=
  },=0A=
=0A=
  dasherize: function() {=0A=
    return this.gsub(/_/,'-');=0A=
  },=0A=
=0A=
  inspect: function(useDoubleQuotes) {=0A=
    var escapedString =3D this.gsub(/[\x00-\x1f\\]/, function(match) {=0A=
      var character =3D String.specialChar[match[0]];=0A=
      return character ? character : '\\u00' + =
match[0].charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return this.inspect(true);=0A=
  },=0A=
=0A=
  unfilterJSON: function(filter) {=0A=
    return this.sub(filter || Prototype.JSONFilter, '#{1}');=0A=
  },=0A=
=0A=
  isJSON: function() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  },=0A=
=0A=
  evalJSON: function(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  },=0A=
=0A=
  include: function(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  },=0A=
=0A=
  startsWith: function(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  },=0A=
=0A=
  endsWith: function(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  },=0A=
=0A=
  empty: function() {=0A=
    return this =3D=3D '';=0A=
  },=0A=
=0A=
  blank: function() {=0A=
    return /^\s*$/.test(this);=0A=
  },=0A=
=0A=
  interpolate: function(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.WebKit || Prototype.Browser.IE) =
Object.extend(String.prototype, {=0A=
  escapeHTML: function() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  },=0A=
  unescapeHTML: function() {=0A=
    return =
this.stripTags().replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;=
/g,'>');=0A=
  }=0A=
});=0A=
=0A=
String.prototype.gsub.prepareReplacement =3D function(replacement) {=0A=
  if (Object.isFunction(replacement)) return replacement;=0A=
  var template =3D new Template(replacement);=0A=
  return function(match) { return template.evaluate(match) };=0A=
};=0A=
=0A=
String.prototype.parseQuery =3D String.prototype.toQueryParams;=0A=
=0A=
Object.extend(String.prototype.escapeHTML, {=0A=
  div:  document.createElement('div'),=0A=
  text: document.createTextNode('')=0A=
});=0A=
=0A=
String.prototype.escapeHTML.div.appendChild(String.prototype.escapeHTML.t=
ext);=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return '';=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? match[2].gsub('\\\\]', =
']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D {=0A=
  each: function(iterator, context) {=0A=
    var index =3D 0;=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator.call(context, value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  },=0A=
=0A=
  eachSlice: function(number, iterator, context) {=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    if (number < 1) return array;=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  },=0A=
=0A=
  all: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator.call(context, value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  any: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator.call(context, value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  collect: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  detect: function(iterator, context) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  findAll: function(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  grep: function(filter, iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(filter);=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  include: function(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  },=0A=
=0A=
  inGroupsOf: function(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  },=0A=
=0A=
  inject: function(memo, iterator, context) {=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator.call(context, memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  },=0A=
=0A=
  invoke: function(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  },=0A=
=0A=
  max: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  min: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  partition: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator.call(context, value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  },=0A=
=0A=
  pluck: function(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  reject: function(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  sortBy: function(iterator, context) {=0A=
    return this.map(function(value, index) {=0A=
      return {=0A=
        value: value,=0A=
        criteria: iterator.call(context, value, index)=0A=
      };=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.map();=0A=
  },=0A=
=0A=
  zip: function() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.toArray().length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Enumerable, {=0A=
  map:     Enumerable.collect,=0A=
  find:    Enumerable.detect,=0A=
  select:  Enumerable.findAll,=0A=
  filter:  Enumerable.findAll,=0A=
  member:  Enumerable.include,=0A=
  entries: Enumerable.toArray,=0A=
  every:   Enumerable.all,=0A=
  some:    Enumerable.any=0A=
});=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if (iterable.toArray) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
if (Prototype.Browser.WebKit) {=0A=
  $A =3D function(iterable) {=0A=
    if (!iterable) return [];=0A=
    // In Safari, only use the `toArray` method if it's not a NodeList.=0A=
    // A NodeList is a function, has an function `item` property, and a =
numeric=0A=
    // `length` property. Adapted from Google Doctype.=0A=
    if (!(typeof iterable =3D=3D=3D 'function' && typeof iterable.length =
=3D=3D=3D=0A=
        'number' && typeof iterable.item =3D=3D=3D 'function') && =
iterable.toArray)=0A=
      return iterable.toArray();=0A=
    var length =3D iterable.length || 0, results =3D new Array(length);=0A=
    while (length--) results[length] =3D iterable[length];=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
Object.extend(Array.prototype, Enumerable);=0A=
=0A=
if (!Array.prototype._reverse) Array.prototype._reverse =3D =
Array.prototype.reverse;=0A=
=0A=
Object.extend(Array.prototype, {=0A=
  _each: function(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  },=0A=
=0A=
  clear: function() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  },=0A=
=0A=
  first: function() {=0A=
    return this[0];=0A=
  },=0A=
=0A=
  last: function() {=0A=
    return this[this.length - 1];=0A=
  },=0A=
=0A=
  compact: function() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  },=0A=
=0A=
  flatten: function() {=0A=
    return this.inject([], function(array, value) {=0A=
      return array.concat(Object.isArray(value) ?=0A=
        value.flatten() : [value]);=0A=
    });=0A=
  },=0A=
=0A=
  without: function() {=0A=
    var values =3D $A(arguments);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  },=0A=
=0A=
  reverse: function(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  },=0A=
=0A=
  reduce: function() {=0A=
    return this.length > 1 ? this : this[0];=0A=
  },=0A=
=0A=
  uniq: function(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  },=0A=
=0A=
  intersect: function(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) { return item =3D=3D=3D value =
});=0A=
    });=0A=
  },=0A=
=0A=
  clone: function() {=0A=
    return [].concat(this);=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
});=0A=
=0A=
// use native browser JS 1.6 implementation if available=0A=
if (Object.isFunction(Array.prototype.forEach))=0A=
  Array.prototype._each =3D Array.prototype.forEach;=0A=
=0A=
if (!Array.prototype.indexOf) Array.prototype.indexOf =3D function(item, =
i) {=0A=
  i || (i =3D 0);=0A=
  var length =3D this.length;=0A=
  if (i < 0) i =3D length + i;=0A=
  for (; i < length; i++)=0A=
    if (this[i] =3D=3D=3D item) return i;=0A=
  return -1;=0A=
};=0A=
=0A=
if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf =3D =
function(item, i) {=0A=
  i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
  var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
  return (n < 0) ? n : i - n - 1;=0A=
};=0A=
=0A=
Array.prototype.toArray =3D Array.prototype.clone;=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
if (Prototype.Browser.Opera){=0A=
  Array.prototype.concat =3D function() {=0A=
    var array =3D [];=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++) =
array.push(this[i]);=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      if (Object.isArray(arguments[i])) {=0A=
        for (var j =3D 0, arrayLength =3D arguments[i].length; j < =
arrayLength; j++)=0A=
          array.push(arguments[i][j]);=0A=
      } else {=0A=
        array.push(arguments[i]);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  };=0A=
}=0A=
Object.extend(Number.prototype, {=0A=
  toColorPart: function() {=0A=
    return this.toPaddedString(2, 16);=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this + 1;=0A=
  },=0A=
=0A=
  times: function(iterator, context) {=0A=
    $R(0, this, true).each(iterator, context);=0A=
    return this;=0A=
  },=0A=
=0A=
  toPaddedString: function(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
});=0A=
=0A=
$w('abs round ceil floor').each(function(method){=0A=
  Number.prototype[method] =3D Math[method].methodize();=0A=
});=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: function(object) {=0A=
      this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
    },=0A=
=0A=
    _each: function(iterator) {=0A=
      for (var key in this._object) {=0A=
        var value =3D this._object[key], pair =3D [key, value];=0A=
        pair.key =3D key;=0A=
        pair.value =3D value;=0A=
        iterator(pair);=0A=
      }=0A=
    },=0A=
=0A=
    set: function(key, value) {=0A=
      return this._object[key] =3D value;=0A=
    },=0A=
=0A=
    get: function(key) {=0A=
      // simulating poorly supported hasOwnProperty=0A=
      if (this._object[key] !=3D=3D Object.prototype[key])=0A=
        return this._object[key];=0A=
    },=0A=
=0A=
    unset: function(key) {=0A=
      var value =3D this._object[key];=0A=
      delete this._object[key];=0A=
      return value;=0A=
    },=0A=
=0A=
    toObject: function() {=0A=
      return Object.clone(this._object);=0A=
    },=0A=
=0A=
    keys: function() {=0A=
      return this.pluck('key');=0A=
    },=0A=
=0A=
    values: function() {=0A=
      return this.pluck('value');=0A=
    },=0A=
=0A=
    index: function(value) {=0A=
      var match =3D this.detect(function(pair) {=0A=
        return pair.value =3D=3D=3D value;=0A=
      });=0A=
      return match && match.key;=0A=
    },=0A=
=0A=
    merge: function(object) {=0A=
      return this.clone().update(object);=0A=
    },=0A=
=0A=
    update: function(object) {=0A=
      return new Hash(object).inject(this, function(result, pair) {=0A=
        result.set(pair.key, pair.value);=0A=
        return result;=0A=
      });=0A=
    },=0A=
=0A=
    toQueryString: function() {=0A=
      return this.inject([], function(results, pair) {=0A=
        var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
        if (values && typeof values =3D=3D 'object') {=0A=
          if (Object.isArray(values))=0A=
            return results.concat(values.map(toQueryPair.curry(key)));=0A=
        } else results.push(toQueryPair(key, values));=0A=
        return results;=0A=
      }).join('&');=0A=
    },=0A=
=0A=
    inspect: function() {=0A=
      return '#<Hash:{' + this.map(function(pair) {=0A=
        return pair.map(Object.inspect).join(': ');=0A=
      }).join(', ') + '}>';=0A=
    },=0A=
=0A=
    toJSON: function() {=0A=
      return Object.toJSON(this.toObject());=0A=
    },=0A=
=0A=
    clone: function() {=0A=
      return new Hash(this);=0A=
    }=0A=
  }=0A=
})());=0A=
=0A=
Hash.prototype.toTemplateReplacements =3D Hash.prototype.toObject;=0A=
Hash.from =3D $H;=0A=
var ObjectRange =3D Class.create(Enumerable, {=0A=
  initialize: function(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  },=0A=
=0A=
  include: function(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
});=0A=
=0A=
var $R =3D function(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
};=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() { Ajax.activeRequestCount++ },=0A=
  onComplete: function() { Ajax.activeRequestCount-- }=0A=
});=0A=
=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      // simulate other verbs over post=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      // when GET, append parameters to URL=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    // user-defined headers=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) { headers[pair.key] =3D =
pair.value });=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) { return 0 }=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      // avoid memory leak in MSIE: clean up=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) { return '' }=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { }; insertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  // DOM level 2 ECMAScript Language Binding=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
(function() {=0A=
  var element =3D this.Element;=0A=
  this.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (Prototype.Browser.IE && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(this.Element, element || { });=0A=
  if (element) this.Element.prototype =3D element.prototype;=0A=
}).call(window);=0A=
=0A=
Element.cache =3D { };=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
  hide: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
    content =3D Object.toHTML(content);=0A=
    element.innerHTML =3D content.stripScripts();=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  },=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return $(element).recursivelyCollect('parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return $(element).select("*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return =
element.previousSiblings().reverse().concat(element.nextSiblings());=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D element.ancestors();=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
    return Object.isNumber(expression) ? =
element.descendants()[expression] :=0A=
      Element.select(element, expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D element.previousSiblings();=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D element.nextSiblings();=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
  select: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D element.readAttribute('id'), self =3D arguments.callee;=0A=
    if (id) return id;=0A=
    do { id =3D 'anonymous_element_' + self.counter++ } while ($(id));=0A=
    element.writeAttribute('id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return $(element).getDimensions().height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return $(element).getDimensions().width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!element.hasClassName(className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return element[element.hasClassName(className) ?=0A=
      'removeClassName' : 'addClassName'](className);=0A=
  },=0A=
=0A=
  // removes whitespace-only text node children=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (ancestor.contains)=0A=
      return ancestor.contains(element) && ancestor !=3D=3D element;=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D ancestor) return true;=0A=
=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D element.cumulativeOffset();=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value || value =3D=3D 'auto') {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D element.getStyle('display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    // All *Width and *Height properties give 0 on elements with display =
none,=0A=
    // so enable the element temporarily=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      // Opera returns the offset relative to the positioning context, =
when an=0A=
      // element is position relative but top and left have not been =
defined=0A=
      if (Prototype.Browser.Opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName.toUpperCase() =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'absolute') return element;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    var offsets =3D element.positionedOffset();=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'relative') return element;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      // Safari fix=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || (element.tagName && =
(element.tagName.toUpperCase() =3D=3D 'BODY'))) {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    // find page position of source=0A=
    source =3D $(source);=0A=
    var p =3D source.viewportOffset();=0A=
=0A=
    // find coordinate system to use=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    // delta [0,0] will do fine with position: fixed elements,=0A=
    // position:absolute needs offsetParent deltas=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D element.getOffsetParent();=0A=
      delta =3D parent.viewportOffset();=0A=
    }=0A=
=0A=
    // correct by body offsets (fixes Safari)=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    // set position=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.identify.counter =3D 1;=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          // returns '0px' for hidden elements; we want it to return null=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          // returns the border-box dimensions rather than the =
content-box=0A=
          // dimensions, so we subtract padding and borders from the =
value=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default: return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  // IE doesn't report offsets correctly for static elements, so we =
change them=0A=
  // to "relative" to get the values, then change them back.=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      // IE throws an error if element is not in document=0A=
      try { element.offsetParent }=0A=
      catch(e) { return $(document.body) }=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({ position: 'relative' });=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({ position: position });=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        try { element.offsetParent }=0A=
        catch(e) { return Element._returnOffset(0,0) }=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        // Trigger hasLayout on the offset parent so that IE6 reports=0A=
        // accurate offsetTop and offsetLeft values for position: fixed.=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({ zoom: 1 });=0A=
        element.setStyle({ position: 'relative' });=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({ position: position });=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.cumulativeOffset =3D =
Element.Methods.cumulativeOffset.wrap(=0A=
    function(proceed, element) {=0A=
      try { element.offsetParent }=0A=
      catch(e) { return Element._returnOffset(0,0) }=0A=
      return proceed(element);=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D {=0A=
    read: {=0A=
      names: {=0A=
        'class': 'className',=0A=
        'for':   'htmlFor'=0A=
      },=0A=
      values: {=0A=
        _getAttr: function(element, attribute) {=0A=
          return element.getAttribute(attribute, 2);=0A=
        },=0A=
        _getAttrNode: function(element, attribute) {=0A=
          var node =3D element.getAttributeNode(attribute);=0A=
          return node ? node.value : "";=0A=
        },=0A=
        _getEv: function(element, attribute) {=0A=
          attribute =3D element.getAttribute(attribute);=0A=
          return attribute ? attribute.toString().slice(23, -2) : null;=0A=
        },=0A=
        _flag: function(element, attribute) {=0A=
          return $(element).hasAttribute(attribute) ? attribute : null;=0A=
        },=0A=
        style: function(element) {=0A=
          return element.style.cssText.toLowerCase();=0A=
        },=0A=
        title: function(element) {=0A=
          return element.title;=0A=
        }=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc =
frameBorder').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr,=0A=
      src:         v._getAttr,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName.toUpperCase() =3D=3D 'IMG' && element.width) {=0A=
        element.width++; element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  // Safari returns margins on body which is incorrect if the child is =
absolutely=0A=
  // positioned.  For performance reasons, redefine =
Element#cumulativeOffset for=0A=
  // KHTML/WebKit only.=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if (Prototype.Browser.IE || Prototype.Browser.Opera) {=0A=
  // IE and Opera are missing .innerHTML support for TABLE-related and =
SELECT elements=0A=
  Element.Methods.update =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (tagName in Element._insertionTranslations.tags) {=0A=
      $A(element.childNodes).each(function(node) { =
element.removeChild(node) });=0A=
      Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
        .each(function(node) { element.appendChild(node) });=0A=
    }=0A=
    else element.innerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.createElement('div')) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) { parent.insertBefore(node, =
nextSibling) });=0A=
      else=0A=
        fragments.each(function(node) { parent.appendChild(node) });=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() { div =3D div.firstChild });=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  Object.extend(this.tags, {=0A=
    THEAD: this.tags.TBODY,=0A=
    TFOOT: this.tags.TBODY,=0A=
    TH:    this.tags.TD=0A=
  });=0A=
}).call(Element._insertionTranslations);=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return !!(node && node.specified);=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
if (!Prototype.BrowserFeatures.ElementExtensions &&=0A=
    document.createElement('div')['__proto__']) {=0A=
  window.HTMLElement =3D { };=0A=
  window.HTMLElement.prototype =3D =
document.createElement('div')['__proto__'];=0A=
  Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
}=0A=
=0A=
Element.extend =3D (function() {=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions)=0A=
    return Prototype.K;=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || element._extendedByPrototype ||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
      tagName =3D element.tagName.toUpperCase(), property, value;=0A=
=0A=
    // extend methods for specific tags=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    for (property in methods) {=0A=
      value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      // extend methods for all tags (Safari doesn't need this)=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    window[klass] =3D { };=0A=
    window[klass].prototype =3D =
document.createElement(tagName)['__proto__'];=0A=
    return window[klass];=0A=
  }=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, HTMLElement.prototype);=0A=
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
document.viewport =3D {=0A=
  getDimensions: function() {=0A=
    var dimensions =3D { }, B =3D Prototype.Browser;=0A=
    $w('width height').each(function(d) {=0A=
      var D =3D d.capitalize();=0A=
      if (B.WebKit && !document.evaluate) {=0A=
        // Safari <3.0 needs self.innerWidth/Height=0A=
        dimensions[d] =3D self['inner' + D];=0A=
      } else if (B.Opera && parseFloat(window.opera.version()) < 9.5) {=0A=
        // Opera <9.5 needs document.body.clientWidth/Height=0A=
        dimensions[d] =3D document.body['client' + D]=0A=
      } else {=0A=
        dimensions[d] =3D document.documentElement['client' + D];=0A=
      }=0A=
    });=0A=
    return dimensions;=0A=
  },=0A=
=0A=
  getWidth: function() {=0A=
    return this.getDimensions().width;=0A=
  },=0A=
=0A=
  getHeight: function() {=0A=
    return this.getDimensions().height;=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
/* Portions of the Selector class are derived from Jack Slocum's =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
=0A=
    if (this.shouldUseSelectorsAPI()) {=0A=
      this.mode =3D 'selectorsAPI';=0A=
    } else if (this.shouldUseXPath()) {=0A=
      this.mode =3D 'xpath';=0A=
      this.compileXPathMatcher();=0A=
    } else {=0A=
      this.mode =3D "normal";=0A=
      this.compileMatcher();=0A=
    }=0A=
=0A=
  },=0A=
=0A=
  shouldUseXPath: function() {=0A=
    if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
    var e =3D this.expression;=0A=
=0A=
    // Safari 3 chokes on :*-of-type and :empty=0A=
    if (Prototype.Browser.WebKit &&=0A=
     (e.include("-of-type") || e.include(":empty")))=0A=
      return false;=0A=
=0A=
    // XPath can't do namespaced attributes, nor can it read=0A=
    // the "checked" property from DOM nodes=0A=
    if ((/(\[[\w-]*?:|:checked)/).test(e))=0A=
      return false;=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  shouldUseSelectorsAPI: function() {=0A=
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;=0A=
=0A=
    if (!Selector._div) Selector._div =3D new Element('div');=0A=
=0A=
    // Make sure the browser treats the selector as valid. Test on an=0A=
    // isolated element to minimize cost of this check.=0A=
    try {=0A=
      Selector._div.querySelector(this.expression);=0A=
    } catch(e) {=0A=
      return false;=0A=
    }=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :=0A=
            new Template(c[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e]; return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        if (m =3D e.match(ps[i])) {=0A=
          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :=0A=
            new Template(x[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    var e =3D this.expression, results;=0A=
=0A=
    switch (this.mode) {=0A=
      case 'selectorsAPI':=0A=
        // querySelectorAll queries document-wide, then filters to =
descendants=0A=
        // of the context element. That's not what we want.=0A=
        // Add an explicit context to the selector if necessary.=0A=
        if (root !=3D=3D document) {=0A=
          var oldId =3D root.id, id =3D $(root).identify();=0A=
          e =3D "#" + id + " " + e;=0A=
        }=0A=
=0A=
        results =3D $A(root.querySelectorAll(e)).map(Element.extend);=0A=
        root.id =3D oldId;=0A=
=0A=
        return results;=0A=
      case 'xpath':=0A=
        return document._getElementsByXPath(this.xpath, root);=0A=
      default:=0A=
       return this.matcher(root);=0A=
    }=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          // use the Selector.assertions methods unless the selector=0A=
          // is too complex.=0A=
          if (as[i]) {=0A=
            this.tokens.push([i, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            // reluctantly do a document-wide search=0A=
            // and look for a match in the array=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false; break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0)]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[(@disabled) and (@type!=3D'hidden')]",=0A=
      'enabled':     "[not(@disabled) and (@type!=3D'hidden')]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i in p) {=0A=
            if (m =3D e.match(p[i])) {=0A=
              v =3D Object.isFunction(x[i]) ? x[i](m) : new =
Template(x[i]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1"; return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos; return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b });=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: {=0A=
    // combinators must be listed first=0A=
    // (and descendant needs to be last combinator)=0A=
    laterSibling: /^\s*~\s*/,=0A=
    child:        /^\s*>\s*/,=0A=
    adjacent:     /^\s*\+\s*/,=0A=
    descendant:   /^\s/,=0A=
=0A=
    // selectors follow=0A=
    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,=0A=
    id:           /^#([\w\-\*]+)(\b|$)/,=0A=
    className:    /^\.([\w\-\*]+)(\b|$)/,=0A=
    pseudo:=0A=
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/,=0A=
    attrPresence: /^\[((?:[\w]+:)?[\w]+)\]/,=0A=
    attr:         =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/=0A=
  },=0A=
=0A=
  // for Selector.match and Element#match=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    // UTILITY FUNCTIONS=0A=
    // joins two collections=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // marks an array of nodes for counting=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D undefined;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    // mark each child node with its position (for nth calls)=0A=
    // "ofType" flag indicates whether we're indexing for nth-of-type=0A=
    // rather than nth-child=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    // filters out duplicates and extends all nodes=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (!(n =3D nodes[i])._countedByPrototype) {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    // COMBINATOR FUNCTIONS=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    // TOKEN FUNCTIONS=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          // fastlane for ordinary descendant combinators=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
      if (!targetNode) return [];=0A=
      if (!nodes && root =3D=3D document) return [targetNode];=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    // handles the an+b logic=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    // handles nth(-last)-child, nth(-last)-of-type, and =
(first|last)-of-type=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        // IE treats comments as element nodes=0A=
        if (node.tagName =3D=3D '!' || node.firstChild) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled && (!node.type || node.type !=3D=3D 'hidden'))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) { return nv =3D=3D v; },=0A=
    '!=3D': function(nv, v) { return nv !=3D v; },=0A=
    '^=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.startsWith(v); },=0A=
    '$=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv =3D=3D v || nv && nv.include(v); =
},=0A=
    '$=3D': function(nv, v) { return nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv.include(v); },=0A=
    '~=3D': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + =
' '); },=0A=
    '|=3D': function(nv, v) { return ('-' + (nv || "").toUpperCase() +=0A=
     '-').include('-' + (v || "").toUpperCase() + '-'); }=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression; expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    // IE returns comment nodes on getElementsByTagName("*").=0A=
    // Filter them out.=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node.removeAttribute('_countedByPrototype');=0A=
      return nodes;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    $(form).reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D { hash: !!options };=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name; value =3D $(element).getValue();=0A=
        if (value !=3D null && element.type !=3D 'file' && (element.type =
!=3D 'submit' || (!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            // a key is already present; construct an array of values=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    return $A($(form).getElementsByTagName('*')).inject([],=0A=
      function(elements, child) {=0A=
        if (Form.Element.Serializers[child.tagName.toLowerCase()])=0A=
          elements.push(Element.extend(child));=0A=
        return elements;=0A=
      }=0A=
    );=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) { return element.tabIndex }).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return ['input', 'select', =
'textarea'].include(element.tagName.toLowerCase());=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !['button', 'reset', 'submit'].include(element.type)))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, value) {=0A=
    if (Object.isUndefined(value))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, currentValue, single =3D !Object.isArray(value);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        currentValue =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (currentValue =3D=3D value) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D value.include(currentValue);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    // extend element because hasAttribute may not be native=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
if (!window.Event) var Event =3D { };=0A=
=0A=
Object.extend(Event, {=0A=
  KEY_BACKSPACE: 8,=0A=
  KEY_TAB:       9,=0A=
  KEY_RETURN:   13,=0A=
  KEY_ESC:      27,=0A=
  KEY_LEFT:     37,=0A=
  KEY_UP:       38,=0A=
  KEY_RIGHT:    39,=0A=
  KEY_DOWN:     40,=0A=
  KEY_DELETE:   46,=0A=
  KEY_HOME:     36,=0A=
  KEY_END:      35,=0A=
  KEY_PAGEUP:   33,=0A=
  KEY_PAGEDOWN: 34,=0A=
  KEY_INSERT:   45,=0A=
=0A=
  cache: { },=0A=
=0A=
  relatedTarget: function(event) {=0A=
    var element;=0A=
    switch(event.type) {=0A=
      case 'mouseover': element =3D event.fromElement; break;=0A=
      case 'mouseout':  element =3D event.toElement;   break;=0A=
      default: return null;=0A=
    }=0A=
    return Element.extend(element);=0A=
  }=0A=
});=0A=
=0A=
Event.Methods =3D (function() {=0A=
  var isButton;=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D { 0: 1, 1: 4, 2: 2 };=0A=
    isButton =3D function(event, code) {=0A=
      return event.button =3D=3D buttonMap[code];=0A=
    };=0A=
=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0: return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1: return event.which =3D=3D 1 && event.metaKey;=0A=
        default: return false;=0A=
      }=0A=
    };=0A=
=0A=
  } else {=0A=
    isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    isLeftClick:   function(event) { return isButton(event, 0) },=0A=
    isMiddleClick: function(event) { return isButton(event, 1) },=0A=
    isRightClick:  function(event) { return isButton(event, 2) },=0A=
=0A=
    element: function(event) {=0A=
      event =3D Event.extend(event);=0A=
=0A=
      var node          =3D event.target,=0A=
          type          =3D event.type,=0A=
          currentTarget =3D event.currentTarget;=0A=
=0A=
      if (currentTarget && currentTarget.tagName) {=0A=
        // Firefox screws up the "click" event when moving between radio =
buttons=0A=
        // via arrow keys. It also screws up the "load" and "error" =
events on images,=0A=
        // reporting the document as the target instead of the original =
image.=0A=
        if (type =3D=3D=3D 'load' || type =3D=3D=3D 'error' ||=0A=
          (type =3D=3D=3D 'click' && currentTarget.tagName.toLowerCase() =
=3D=3D=3D 'input'=0A=
            && currentTarget.type =3D=3D=3D 'radio'))=0A=
              node =3D currentTarget;=0A=
      }=0A=
      if (node.nodeType =3D=3D Node.TEXT_NODE) node =3D node.parentNode;=0A=
      return Element.extend(node);=0A=
    },=0A=
=0A=
    findElement: function(event, expression) {=0A=
      var element =3D Event.element(event);=0A=
      if (!expression) return element;=0A=
      var elements =3D [element].concat(element.ancestors());=0A=
      return Selector.findElement(elements, expression, 0);=0A=
    },=0A=
=0A=
    pointer: function(event) {=0A=
      var docElement =3D document.documentElement,=0A=
      body =3D document.body || { scrollLeft: 0, scrollTop: 0 };=0A=
      return {=0A=
        x: event.pageX || (event.clientX +=0A=
          (docElement.scrollLeft || body.scrollLeft) -=0A=
          (docElement.clientLeft || 0)),=0A=
        y: event.pageY || (event.clientY +=0A=
          (docElement.scrollTop || body.scrollTop) -=0A=
          (docElement.clientTop || 0))=0A=
      };=0A=
    },=0A=
=0A=
    pointerX: function(event) { return Event.pointer(event).x },=0A=
    pointerY: function(event) { return Event.pointer(event).y },=0A=
=0A=
    stop: function(event) {=0A=
      Event.extend(event);=0A=
      event.preventDefault();=0A=
      event.stopPropagation();=0A=
      event.stopped =3D true;=0A=
    }=0A=
  };=0A=
})();=0A=
=0A=
Event.extend =3D (function() {=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() { this.cancelBubble =3D true },=0A=
      preventDefault:  function() { this.returnValue =3D false },=0A=
      inspect: function() { return "[object Event]" }=0A=
    });=0A=
=0A=
    return function(event) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
      Object.extend(event, {=0A=
        target: event.srcElement,=0A=
        relatedTarget: Event.relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
=0A=
  } else {=0A=
    Event.prototype =3D Event.prototype || =
document.createEvent("HTMLEvents")['__proto__'];=0A=
    Object.extend(Event.prototype, methods);=0A=
    return Prototype.K;=0A=
  }=0A=
})();=0A=
=0A=
Object.extend(Event, (function() {=0A=
  var cache =3D Event.cache;=0A=
=0A=
  function getEventID(element) {=0A=
    if (element._prototypeEventID) return element._prototypeEventID[0];=0A=
    arguments.callee.id =3D arguments.callee.id || 1;=0A=
    return element._prototypeEventID =3D [++arguments.callee.id];=0A=
  }=0A=
=0A=
  function getDOMEventName(eventName) {=0A=
    if (eventName && eventName.include(':')) return "dataavailable";=0A=
    return eventName;=0A=
  }=0A=
=0A=
  function getCacheForID(id) {=0A=
    return cache[id] =3D cache[id] || { };=0A=
  }=0A=
=0A=
  function getWrappersForEventName(id, eventName) {=0A=
    var c =3D getCacheForID(id);=0A=
    return c[eventName] =3D c[eventName] || [];=0A=
  }=0A=
=0A=
  function createWrapper(element, eventName, handler) {=0A=
    var id =3D getEventID(element);=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    if (c.pluck("handler").include(handler)) return false;=0A=
=0A=
    var wrapper =3D function(event) {=0A=
      if (!Event || !Event.extend ||=0A=
        (event.eventName && event.eventName !=3D eventName))=0A=
          return false;=0A=
=0A=
      Event.extend(event);=0A=
      handler.call(element, event);=0A=
    };=0A=
=0A=
    wrapper.handler =3D handler;=0A=
    c.push(wrapper);=0A=
    return wrapper;=0A=
  }=0A=
=0A=
  function findWrapper(id, eventName, handler) {=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    return c.find(function(wrapper) { return wrapper.handler =3D=3D =
handler });=0A=
  }=0A=
=0A=
  function destroyWrapper(id, eventName, handler) {=0A=
    var c =3D getCacheForID(id);=0A=
    if (!c[eventName]) return false;=0A=
    c[eventName] =3D c[eventName].without(findWrapper(id, eventName, =
handler));=0A=
  }=0A=
=0A=
  function destroyCache() {=0A=
    for (var id in cache)=0A=
      for (var eventName in cache[id])=0A=
        cache[id][eventName] =3D null;=0A=
  }=0A=
=0A=
=0A=
  // Internet Explorer needs to remove event handlers on page unload=0A=
  // in order to avoid memory leaks.=0A=
  if (window.attachEvent) {=0A=
    window.attachEvent("onunload", destroyCache);=0A=
  }=0A=
=0A=
  // Safari has a dummy event handler on page unload so that it won't=0A=
  // use its bfcache. Safari <=3D 3.1 has an issue with restoring the =
"document"=0A=
  // object when page is returned to via the back button using its =
bfcache.=0A=
  if (Prototype.Browser.WebKit) {=0A=
    window.addEventListener('unload', Prototype.emptyFunction, false);=0A=
  }=0A=
=0A=
  return {=0A=
    observe: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var name =3D getDOMEventName(eventName);=0A=
=0A=
      var wrapper =3D createWrapper(element, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.addEventListener) {=0A=
        element.addEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.attachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    stopObserving: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var id =3D getEventID(element), name =3D =
getDOMEventName(eventName);=0A=
=0A=
      if (!handler && eventName) {=0A=
        getWrappersForEventName(id, eventName).each(function(wrapper) {=0A=
          element.stopObserving(eventName, wrapper.handler);=0A=
        });=0A=
        return element;=0A=
=0A=
      } else if (!eventName) {=0A=
        Object.keys(getCacheForID(id)).each(function(eventName) {=0A=
          element.stopObserving(eventName);=0A=
        });=0A=
        return element;=0A=
      }=0A=
=0A=
      var wrapper =3D findWrapper(id, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.removeEventListener) {=0A=
        element.removeEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.detachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      destroyWrapper(id, eventName, handler);=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    fire: function(element, eventName, memo) {=0A=
      element =3D $(element);=0A=
      if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
        element =3D document.documentElement;=0A=
=0A=
      var event;=0A=
      if (document.createEvent) {=0A=
        event =3D document.createEvent("HTMLEvents");=0A=
        event.initEvent("dataavailable", true, true);=0A=
      } else {=0A=
        event =3D document.createEventObject();=0A=
        event.eventType =3D "ondataavailable";=0A=
      }=0A=
=0A=
      event.eventName =3D eventName;=0A=
      event.memo =3D memo || { };=0A=
=0A=
      if (document.createEvent) {=0A=
        element.dispatchEvent(event);=0A=
      } else {=0A=
        element.fireEvent(event.eventType, event);=0A=
      }=0A=
=0A=
      return Event.extend(event);=0A=
    }=0A=
  };=0A=
})());=0A=
=0A=
Object.extend(Event, Event.Methods);=0A=
=0A=
Element.addMethods({=0A=
  fire:          Event.fire,=0A=
  observe:       Event.observe,=0A=
  stopObserving: Event.stopObserving=0A=
});=0A=
=0A=
Object.extend(document, {=0A=
  fire:          Element.Methods.fire.methodize(),=0A=
  observe:       Element.Methods.observe.methodize(),=0A=
  stopObserving: Element.Methods.stopObserving.methodize(),=0A=
  loaded:        false=0A=
});=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards and John Resig. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearInterval(timer);=0A=
    document.fire("dom:loaded");=0A=
    document.loaded =3D true;=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    if (Prototype.Browser.WebKit) {=0A=
      timer =3D window.setInterval(function() {=0A=
        if (/loaded|complete/.test(document.readyState))=0A=
          fireContentLoadedEvent();=0A=
      }, 0);=0A=
=0A=
      Event.observe(window, "load", fireContentLoadedEvent);=0A=
=0A=
    } else {=0A=
      document.addEventListener("DOMContentLoaded",=0A=
        fireContentLoadedEvent, false);=0A=
    }=0A=
=0A=
  } else {=0A=
    document.write("<script id=3D__onDOMContentLoaded defer =
src=3D//:><\/script>");=0A=
    $("__onDOMContentLoaded").onreadystatechange =3D function() {=0A=
      if (this.readyState =3D=3D "complete") {=0A=
        this.onreadystatechange =3D null;=0A=
        fireContentLoadedEvent();=0A=
      }=0A=
    };=0A=
  }=0A=
})();=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D { display: Element.toggle };=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
// This should be moved to script.aculo.us; notice the deprecated methods=0A=
// further below, that map to the newer Element methods.=0A=
var Position =3D {=0A=
  // set to true if needed, warning: firefox performance problems=0A=
  // NOT neeeded for page scrolling, only if draggable contained in=0A=
  // scrollable elements=0A=
  includeScrollOffsets: false,=0A=
=0A=
  // must be called before calling withinIncludingScrolloffset, every =
time the=0A=
  // page is scrolled=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  // caches x/y coordinate pair to use with overlap=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  // within must be called directly before=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
  // Deprecation layer -- use newer Element methods now (1.5.2).=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.addMethods();
------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://mahout.apache.org/images/effects.js

// script.aculo.us effects.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008=0A=
=0A=
// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// Contributors:=0A=
//  Justin Palmer (http://encytemedia.com/)=0A=
//  Mark Pilgrim (http://diveintomark.org/)=0A=
//  Martin Bialasinki=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// converts rgb() and #xxx to #xxxxxx format,=0A=
// returns self (or first argument) if not convertable=0A=
String.prototype.parseColor =3D function() {=0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {=0A=
    var cols =3D this.slice(4,this.length-1).split(',');=0A=
    var i=3D0; do { color +=3D parseInt(cols[i]).toColorPart() } while =
(++i<3);=0A=
  } else {=0A=
    if (this.slice(0,1) =3D=3D '#') {=0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();=0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();=0A=
    }=0A=
  }=0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?=0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);=0A=
  element.setStyle({fontSize: (percent/100) + 'em'});=0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + .5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;=0A=
    },=0A=
    pulse: function(pos, pulses) {=0A=
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;=0A=
    },=0A=
    spring: function(pos) {=0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));=0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
=0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character),=0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') ||=0A=
        Object.isFunction(element)) &&=0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
=0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, { delay: index * =
options.speed + masterDelay }));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect) {=0A=
    element =3D $(element);=0A=
    effect =3D (effect || 'appear').toLowerCase();=0A=
    var options =3D Object.extend({=0A=
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }=0A=
    }, arguments[2] || { });=0A=
    Effect[element.visible() ?=0A=
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, =
options);=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;=0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
=0A=
    var position =3D Object.isString(effect.options.queue) ?=0A=
      effect.options.queue : effect.options.queue.position;=0A=
=0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect=0A=
        this.effects.findAll(function(e){ return e.state=3D=3D'idle' =
}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
=0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
=0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) { return =
e=3D=3Deffect });=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++)=0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
=0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    function codeForEvent(options,eventName){=0A=
      return (=0A=
        (options[eventName+'Internal'] ? =
'this.options.'+eventName+'Internal(this);' : '') +=0A=
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')=0A=
      );=0A=
    }=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
=0A=
    this.render =3D (function() {=0A=
      function dispatch(effect, eventName) {=0A=
        if (effect.options[eventName + 'Internal'])=0A=
          effect.options[eventName + 'Internal'](effect);=0A=
        if (effect.options[eventName])=0A=
          effect.options[eventName](effect);=0A=
      }=0A=
=0A=
      return function(pos) {=0A=
        if (this.state =3D=3D=3D "idle") {=0A=
          this.state =3D "running";=0A=
          dispatch(this, 'beforeSetup');=0A=
          if (this.setup) this.setup();=0A=
          dispatch(this, 'afterSetup');=0A=
        }=0A=
        if (this.state =3D=3D=3D "running") {=0A=
          pos =3D (this.options.transition(pos) * this.fromToDelta) + =
this.options.from;=0A=
          this.position =3D pos;=0A=
          dispatch(this, 'beforeUpdate');=0A=
          if (this.update) this.update(pos);=0A=
          dispatch(this, 'afterUpdate');=0A=
        }=0A=
      };=0A=
    })();=0A=
=0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish();=0A=
        this.event('afterFinish');=0A=
        return;=0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(),=0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) :=0A=
      function(value) { object[method] =3D value };=0A=
    this.start(Object.extend({ from: from, to: to }, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element,=0A=
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
=0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
=0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
=0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
=0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
=0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType });=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({ startcolor: '#ffff99' }, =
arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') { this.cancel(); =
return; }=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){ return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){ return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] =
}.bind(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); =
}.bind(this)) });=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
  scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
  elementOffsets =3D $(element).cumulativeOffset();=0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1],=0A=
    options,=0A=
    function(p){ scrollTo(scrollOffsets.left, p.round()); }=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) {=0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity});=0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show();=0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    opacity: element.getInlineOpacity(),=0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200,=0A=
      { sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true }),=0A=
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],=0A=
     Object.extend({ duration: 1.0,=0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element);=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle); }=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({ scaleContent: false,=0A=
      scaleX: false,=0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, {=0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) {=0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      });=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity() };=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),=0A=
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],=0A=
    Object.extend(=0A=
      { duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        }=0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left') };=0A=
    return new Effect.Move(element,=0A=
      { x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }}); }}); }}); }}); }}); }});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom}); }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({ scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish=0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, {=0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping();=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, =
from: 0.0, transition: options.opacityTransition }),=0A=
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: =
true, transition: options.moveTransition }),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: { originalHeight: dims.height, originalWidth: =
dims.width },=0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show();=0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le);=0A=
             }=0A=
           }, options)=0A=
      );=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition }),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, =
transition: options.moveTransition })=0A=
    ], Object.extend({=0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping();=0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle); }=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { },=0A=
    oldOpacity =3D element.getInlineOpacity(),=0A=
    transition =3D options.transition || Effect.Transitions.linear,=0A=
    reverser   =3D function(pos){=0A=
      return 1 - =
transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);=0A=
    };=0A=
=0A=
  return new Effect.Opacity(element,=0A=
    Object.extend(Object.extend({  duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) { =
effect.element.setStyle({opacity: oldOpacity}); }=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height };=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, {=0A=
      scaleContent: false,=0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      } });=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
=0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        };=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
=0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 );=0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return {=0A=
        style: property.camelize(),=0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0),=0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      );=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D=0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) +=0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: { style: data }=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){ return new effect(e, =
Object.extend({ sync:true }, options)) });=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' +=0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
=0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
=0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]);=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(results, =
property) {=0A=
      results[property] =3D css[property];=0A=
      return results;=0A=
    });=0A=
    if (!styles.opacity) styles.opacity =3D element.getOpacity();=0A=
    return styles;=0A=
  };=0A=
}=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({ style: style }, =
arguments[2] || { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element);=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) {=0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    };=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each(=0A=
  function(f) { Effect.Methods[f] =3D Element[f]; }=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);
------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://mahout.apache.org/images/search.js

function initSearch(){=0A=
    var methods =3D {=0A=
        defaultValueActsAsHint: function(element){=0A=
            element =3D $(element);=0A=
            element._default =3D element.value;=0A=
            return element.observe('focus', function(){=0A=
                if(element._default !=3D element.value) return;=0A=
                element.removeClassName('hint').value =3D '';=0A=
            }).observe('blur', function(){=0A=
                if(element.value.strip() !=3D '') return;=0A=
                element.addClassName('hint').value =3D element._default;=0A=
            }).addClassName('hint');=0A=
        }=0A=
    };=0A=
    $w('input textarea').each(function(tag){ Element.addMethods(tag, =
methods) });=0A=
}=0A=
initSearch();=0A=
=0A=
document.observe('dom:loaded', function(){=0A=
    $('searchDocs').defaultValueActsAsHint();=0A=
});
------=_NextPart_000_0000_01CE75F6.2B00A430
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://mahout.apache.org/images/slides.js

var Slides =3D Class.create({=0A=
=0A=
	initialize: function(element, options) {		=0A=
		this.options =3D {=0A=
      		Duration: 1,=0A=
			Delay: 10.0,=0A=
			Random: true,=0A=
			Slideshow:true,=0A=
			Controls:true=0A=
    	}=0A=
		Object.extend(this.options, options || {});=0A=
=0A=
    	this.element        =3D $(element);=0A=
		this.slides			=3D this.element.childElements();=0A=
		this.num_slides		=3D this.slides.length;		=0A=
		this.current_slide 	=3D (this.options.Random) ? =
(Math.floor(Math.random()*this.num_slides)) : 0;=0A=
		this.end_slide		=3D this.num_slides - 1;=0A=
		=0A=
		this.slides.invoke('hide');=0A=
		this.slides[this.current_slide].show();=0A=
				=0A=
		if (this.options.Slideshow) { =0A=
			this.startSlideshow();=0A=
		}				=0A=
		if (this.options.Controls) {=0A=
			this.addControls();=0A=
		}		=0A=
	},=0A=
	=0A=
	addControls: function() {=0A=
		this.btn_previous	=3D $('previous');=0A=
		this.btn_next 		=3D $('next');=0A=
		this.btn_start		=3D $('start');=0A=
		this.btn_stop		=3D $('stop');=0A=
		=0A=
		this.btn_previous.observe('click', =
this.moveToPrevious.bindAsEventListener(this));=0A=
		this.btn_next.observe('click', =
this.moveToNext.bindAsEventListener(this));=0A=
		this.btn_start.observe('click', =
this.startSlideshow.bindAsEventListener(this));=0A=
		this.btn_stop.observe('click', =
this.stopSlideshow.bindAsEventListener(this));=0A=
	},=0A=
=0A=
	startSlideshow: function(event) {=0A=
		if (event) { Event.stop(event); }=0A=
		if (!this.running)	{=0A=
			this.fadeStartBtn();=0A=
			this.executer =3D new PeriodicalExecuter(function(){=0A=
	  			this.updateSlide(this.current_slide+1);=0A=
	 		}.bind(this),this.options.Delay);=0A=
			this.running=3Dtrue;=0A=
		}=0A=
		=0A=
	},=0A=
	=0A=
	fadeStartBtn: function() {=0A=
		var startBtn =3D $('start');=0A=
		var stopBtn =3D $('stop');=0A=
		Effect.Fade(startBtn, { duration: 0.3 }),=0A=
		Effect.Appear(stopBtn, { duration: 0.3 }) =0A=
	},=0A=
	=0A=
	stopSlideshow: function(event) {	=0A=
		if (event) { Event.stop(event); } =0A=
		if (this.executer) {=0A=
			this.fadeStopBtn();=0A=
			this.executer.stop();=0A=
			this.running=3Dfalse;=0A=
		}	 =0A=
	},=0A=
	=0A=
	fadeStopBtn: function() {=0A=
		var startBtn =3D $('start');=0A=
		var stopBtn =3D $('stop');=0A=
		Effect.Fade(stopBtn, { duration: 0.3 }),=0A=
		Effect.Appear(startBtn, { duration: 0.3 }) =0A=
	},=0A=
=0A=
	moveToPrevious: function (event) {=0A=
		if (event) { Event.stop(event); }=0A=
		//this.stopSlideshow();=0A=
  		this.updateSlide(this.current_slide-1);=0A=
	},=0A=
=0A=
	moveToNext: function (event) {=0A=
		if (event) { Event.stop(event); }=0A=
		//this.stopSlideshow();=0A=
  		this.updateSlide(this.current_slide+1);=0A=
	},=0A=
	=0A=
	updateSlide: function(next_slide) {=0A=
		if (next_slide > this.end_slide) { =0A=
				next_slide =3D 0; =0A=
		} =0A=
		else if ( next_slide =3D=3D -1 ) {=0A=
				next_slide =3D this.end_slide;=0A=
		}=0A=
		=0A=
		this.fadeInOut(next_slide, this.current_slide);		=0A=
	},=0A=
=0A=
 	fadeInOut: function (next, current) {		=0A=
		new Effect.Parallel([=0A=
			new Effect.Fade(this.slides[current], { sync: true }),=0A=
			new Effect.Appear(this.slides[next], { sync: true }) =0A=
  		], { duration: this.options.Duration });=0A=
		=0A=
		this.current_slide =3D next;		=0A=
	}=0A=
=0A=
});
------=_NextPart_000_0000_01CE75F6.2B00A430--
